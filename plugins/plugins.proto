syntax = "proto3";
package plugins;
option go_package = "github.com/cube2222/octosql/plugins";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

/*
  Every time this file is changed, the corresponding Go file should be
  regenerated using the following command executed from this directory:

  protoc -I=. -I=$GOPATH/src -I=$GOPATH/src/github.com/gogo/protobuf/protobuf --gogofaster_out=plugins=grpc,Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types:. --gogofaster_opt=paths=source_relative plugins.proto

  Make sure you have protoc and the gogo/proto plugin installed. Instructions:

  https://grpc.io/docs/languages/go/quickstart/
*/

service Plugin {
    rpc GetPluginMetadata (GetPluginMetadataRequest) returns (GetPluginMetadataResponse);
    rpc GetSchema (GetSchemaRequest) returns (Schema);
    rpc Run (RunRequest) returns (stream RunMessage);
}

message GetPluginMetadataRequest {
}

message GetPluginMetadataResponse {
    repeated string supported_functions = 1;
    repeated int64 supported_expression_types = 2;
}

message GetSchemaRequest {
    string table = 1;
}

message Schema {
    repeated SchemaField fields = 1;

	// time_field is -1 if not present.
	int64 time_field = 2;
}
message SchemaField {
    string name = 1;
    Type type = 2;
}

message RunRequest {
    Expression predicate = 1;
    map<string, Value> variable_values = 2;
}

message Expression {
    Type type = 1;
    oneof expression {
        Variable variable = 2;
        Constant constant = 3;
        FunctionCall function_call = 4;
        And and = 5;
        Or or = 6;
        TypeAssertion type_assertion = 7;
    }
}

message Variable {
    string name = 1;
    bool is_level_0 = 2;
}
message Constant {
    Value value = 1;
}
message FunctionCall {
    string name = 1;
    repeated Expression arguments = 2;
}
message And {
    repeated Expression arguments = 1;
}
message Or {
    repeated Expression arguments = 2;
}
message TypeAssertion {
    Expression expression = 1;
    Type target_type = 2;
}

message Value {
    Type type = 1;
    oneof value {
        bool null = 2;
        int64 int = 3;
        double float = 4;
        bool boolean = 5;
        string str = 6;
        google.protobuf.Timestamp time = 7;
        google.protobuf.Duration duration = 8;
        Values list = 9;
        Values field_values = 10;
    }
}

message Values {
    repeated Value values = 1;
}

message RunMessage {
    oneof content {
        MetadataMessage metadata_message = 1;
        Record record = 2;
    }
}

message MetadataMessage {
    oneof metadata_message {
        google.protobuf.Timestamp watermark = 1;
    }
}

message Record {
    Values value = 1;
    bool retraction = 2;
}

message Type {
    oneof type {
        TypeNull null = 1;
        TypeInt int = 2;
        TypeFloat float = 3;
        TypeBoolean boolean = 4;
        TypeStr str = 5;
        TypeTime time = 6;
        TypeDuration duration = 7;
        TypeList list = 8;
        TypeStruct struct = 9;
        TypeUnion union = 10;
        TypeAny any = 11;
    }
}

message TypeNull {
}
message TypeInt {
}
message TypeFloat {
}
message TypeBoolean {
}
message TypeStr {
}
message TypeTime {
}
message TypeDuration {
}
message TypeList {
    Type element = 1;
}
message TypeStruct {
    repeated TypeStructField fields = 1;
}
message TypeStructField {
    string name = 1;
    Type type = 2;
}
message TypeUnion {
    repeated Type alternatives = 1;
}
message TypeAny {
}
