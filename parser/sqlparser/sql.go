// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:24
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:24

func setParseTree(yylex interface{}, stmt *Program) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:59
type yySymType struct {
	yys                              int
	tableValuedFunctionArguments     TableValuedFunctionArguments
	tableValuedFunctionArgument      *TableValuedFunctionArgument
	tableValuedFunctionArgumentValue TableValuedFunctionArgumentValue
	empty                            struct{}
	statement                        Statement
	selStmt                          SelectStatement
	ddl                              *DDL
	ins                              *Insert
	byt                              byte
	bytes                            []byte
	bytes2                           [][]byte
	str                              string
	strs                             []string
	selectExprs                      SelectExprs
	selectExpr                       SelectExpr
	columns                          Columns
	partitions                       Partitions
	colName                          *ColName
	tableExprs                       TableExprs
	tableExpr                        TableExpr
	joinCondition                    JoinCondition
	tableName                        TableName
	tableNames                       TableNames
	indexHints                       *IndexHints
	expr                             Expr
	exprs                            Exprs
	boolVal                          BoolVal
	sqlVal                           *SQLVal
	colTuple                         ColTuple
	values                           Values
	valTuple                         ValTuple
	subquery                         *Subquery
	whens                            []*When
	when                             *When
	orderBy                          OrderBy
	order                            *Order
	limit                            *Limit
	triggers                         []Trigger
	trigger                          Trigger
	updateExprs                      UpdateExprs
	setExprs                         SetExprs
	updateExpr                       *UpdateExpr
	setExpr                          *SetExpr
	colIdent                         ColIdent
	tableIdent                       TableIdent
	convertType                      *ConvertType
	aliasedTableName                 *AliasedTableExpr
	TableSpec                        *TableSpec
	columnType                       ColumnType
	colKeyOpt                        ColumnKeyOption
	optVal                           Expr
	LengthScaleOption                LengthScaleOption
	columnDefinition                 *ColumnDefinition
	indexDefinition                  *IndexDefinition
	indexInfo                        *IndexInfo
	indexOption                      *IndexOption
	indexOptions                     []*IndexOption
	indexColumn                      *IndexColumn
	indexColumns                     []*IndexColumn
	constraintDefinition             *ConstraintDefinition
	constraintInfo                   ConstraintInfo
	ReferenceAction                  ReferenceAction
	partDefs                         []*PartitionDefinition
	partDef                          *PartitionDefinition
	partSpec                         *PartitionSpec
	vindexParam                      VindexParam
	vindexParams                     []VindexParam
	showFilter                       *ShowFilter
	optLike                          *OptLike
	pprogram                         Program
	optionsSpecs                     OptionsSpecs
	optionsSpecsEntry                []OptionsSpecsEntry
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const WATERMARK = 57362
const DELAY = 57363
const COUNTING = 57364
const AFTER = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const KEY = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const VALUES = 57380
const LAST_INSERT_ID = 57381
const NEXT = 57382
const VALUE = 57383
const SHARE = 57384
const MODE = 57385
const SQL_NO_CACHE = 57386
const SQL_CACHE = 57387
const JOIN = 57388
const STRAIGHT_JOIN = 57389
const LEFT = 57390
const RIGHT = 57391
const INNER = 57392
const OUTER = 57393
const CROSS = 57394
const NATURAL = 57395
const USE = 57396
const FORCE = 57397
const ON = 57398
const USING = 57399
const ID = 57400
const HEX = 57401
const STRING = 57402
const INTEGRAL = 57403
const FLOAT = 57404
const HEXNUM = 57405
const VALUE_ARG = 57406
const LIST_ARG = 57407
const COMMENT = 57408
const COMMENT_KEYWORD = 57409
const BIT_LITERAL = 57410
const NULL = 57411
const TRUE = 57412
const FALSE = 57413
const OFF = 57414
const OR = 57415
const AND = 57416
const NOT = 57417
const BETWEEN = 57418
const CASE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const END = 57423
const LE = 57424
const GE = 57425
const NE = 57426
const NULL_SAFE_EQUAL = 57427
const IS = 57428
const LIKE = 57429
const REGEXP = 57430
const IN = 57431
const RIGHTARROW = 57432
const SHIFT_LEFT = 57433
const SHIFT_RIGHT = 57434
const DIV = 57435
const MOD = 57436
const UNARY = 57437
const COLLATE = 57438
const BINARY = 57439
const UNDERSCORE_BINARY = 57440
const UNDERSCORE_UTF8MB4 = 57441
const INTERVAL = 57442
const JSON_EXTRACT_OP = 57443
const JSON_UNQUOTE_EXTRACT_OP = 57444
const CREATE = 57445
const ALTER = 57446
const DROP = 57447
const RENAME = 57448
const ANALYZE = 57449
const ADD = 57450
const FLUSH = 57451
const OPTIONS = 57452
const SCHEMA = 57453
const DATASOURCE = 57454
const OF = 57455
const TYPE = 57456
const TABLE = 57457
const DESCRIPTOR = 57458
const INDEX = 57459
const VIEW = 57460
const TO = 57461
const IGNORE = 57462
const IF = 57463
const UNIQUE = 57464
const PRIMARY = 57465
const COLUMN = 57466
const SPATIAL = 57467
const FULLTEXT = 57468
const KEY_BLOCK_SIZE = 57469
const ACTION = 57470
const CASCADE = 57471
const CONSTRAINT = 57472
const FOREIGN = 57473
const NO = 57474
const REFERENCES = 57475
const RESTRICT = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const MAXVALUE = 57485
const PARTITION = 57486
const REORGANIZE = 57487
const LESS = 57488
const THAN = 57489
const PROCEDURE = 57490
const TRIGGER = 57491
const VINDEX = 57492
const VINDEXES = 57493
const STATUS = 57494
const VARIABLES = 57495
const WARNINGS = 57496
const BEGIN = 57497
const START = 57498
const TRANSACTION = 57499
const COMMIT = 57500
const ROLLBACK = 57501
const BIT = 57502
const TINYINT = 57503
const SMALLINT = 57504
const MEDIUMINT = 57505
const INT = 57506
const INTEGER = 57507
const BIGINT = 57508
const INTNUM = 57509
const REAL = 57510
const DOUBLE = 57511
const FLOAT_TYPE = 57512
const DECIMAL = 57513
const NUMERIC = 57514
const TIME = 57515
const TIMESTAMP = 57516
const DATETIME = 57517
const YEAR = 57518
const CHAR = 57519
const VARCHAR = 57520
const BOOL = 57521
const CHARACTER = 57522
const VARBINARY = 57523
const NCHAR = 57524
const TEXT = 57525
const TINYTEXT = 57526
const MEDIUMTEXT = 57527
const LONGTEXT = 57528
const BLOB = 57529
const TINYBLOB = 57530
const MEDIUMBLOB = 57531
const LONGBLOB = 57532
const JSON = 57533
const ENUM = 57534
const GEOMETRY = 57535
const POINT = 57536
const LINESTRING = 57537
const POLYGON = 57538
const GEOMETRYCOLLECTION = 57539
const MULTIPOINT = 57540
const MULTILINESTRING = 57541
const MULTIPOLYGON = 57542
const NULLX = 57543
const AUTO_INCREMENT = 57544
const APPROXNUM = 57545
const SIGNED = 57546
const UNSIGNED = 57547
const ZEROFILL = 57548
const COLLATION = 57549
const DATABASES = 57550
const SCHEMAS = 57551
const TABLES = 57552
const VITESS_KEYSPACES = 57553
const VITESS_SHARDS = 57554
const VITESS_TABLETS = 57555
const VSCHEMA = 57556
const VSCHEMA_TABLES = 57557
const VITESS_TARGET = 57558
const FULL = 57559
const PROCESSLIST = 57560
const COLUMNS = 57561
const FIELDS = 57562
const ENGINES = 57563
const PLUGINS = 57564
const NAMES = 57565
const CHARSET = 57566
const GLOBAL = 57567
const SESSION = 57568
const ISOLATION = 57569
const LEVEL = 57570
const READ = 57571
const WRITE = 57572
const ONLY = 57573
const REPEATABLE = 57574
const COMMITTED = 57575
const UNCOMMITTED = 57576
const SERIALIZABLE = 57577
const CURRENT_TIMESTAMP = 57578
const DATABASE = 57579
const CURRENT_DATE = 57580
const CURRENT_TIME = 57581
const LOCALTIME = 57582
const LOCALTIMESTAMP = 57583
const UTC_DATE = 57584
const UTC_TIME = 57585
const UTC_TIMESTAMP = 57586
const REPLACE = 57587
const CONVERT = 57588
const CAST = 57589
const SUBSTR = 57590
const SUBSTRING = 57591
const GROUP_CONCAT = 57592
const SEPARATOR = 57593
const TIMESTAMPADD = 57594
const TIMESTAMPDIFF = 57595
const MATCH = 57596
const AGAINST = 57597
const BOOLEAN = 57598
const LANGUAGE = 57599
const WITH = 57600
const QUERY = 57601
const EXPANSION = 57602
const UNUSED = 57603

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"WATERMARK",
	"DELAY",
	"COUNTING",
	"AFTER",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"RIGHTARROW",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"OPTIONS",
	"SCHEMA",
	"DATASOURCE",
	"OF",
	"TYPE",
	"TABLE",
	"DESCRIPTOR",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VSCHEMA_TABLES",
	"VITESS_TARGET",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	5, 29,
	-2, 4,
	-1, 38,
	169, 306,
	170, 306,
	-2, 296,
	-1, 279,
	117, 662,
	-2, 658,
	-1, 280,
	117, 663,
	-2, 659,
	-1, 348,
	86, 844,
	-2, 63,
	-1, 349,
	86, 798,
	-2, 64,
	-1, 354,
	86, 774,
	-2, 624,
	-1, 356,
	86, 819,
	-2, 626,
	-1, 628,
	1, 358,
	5, 358,
	12, 358,
	13, 358,
	14, 358,
	15, 358,
	17, 358,
	19, 358,
	34, 358,
	35, 358,
	46, 358,
	47, 358,
	48, 358,
	49, 358,
	50, 358,
	52, 358,
	53, 358,
	56, 358,
	57, 358,
	59, 358,
	60, 358,
	166, 358,
	279, 358,
	-2, 385,
	-1, 632,
	57, 44,
	59, 44,
	-2, 48,
	-1, 778,
	117, 665,
	-2, 661,
	-1, 1007,
	5, 30,
	-2, 452,
	-1, 1037,
	5, 29,
	-2, 598,
	-1, 1289,
	5, 30,
	-2, 599,
	-1, 1348,
	5, 29,
	-2, 601,
	-1, 1439,
	5, 30,
	-2, 602,
}

const yyPrivate = 57344

const yyLast = 14000

var yyAct = [...]int{

	280, 1491, 1252, 1481, 1454, 1425, 1136, 1315, 1380, 1040,
	584, 284, 1363, 1187, 1062, 297, 1329, 1224, 865, 1060,
	1184, 57, 624, 860, 888, 310, 1041, 892, 1068, 972,
	1188, 935, 862, 82, 891, 901, 1194, 217, 1089, 1200,
	217, 1159, 258, 803, 286, 813, 999, 743, 353, 729,
	1116, 810, 1106, 905, 645, 867, 248, 831, 851, 780,
	516, 311, 52, 522, 644, 931, 342, 217, 82, 455,
	347, 844, 217, 282, 217, 217, 536, 528, 267, 487,
	625, 583, 4, 339, 598, 344, 634, 56, 1484, 1460,
	1479, 599, 1437, 631, 1476, 1253, 1459, 1436, 1176, 1281,
	461, 1218, 249, 250, 251, 252, 254, 1077, 255, 271,
	1076, 883, 884, 1078, 52, 915, 1219, 1220, 52, 921,
	322, 263, 328, 329, 326, 327, 325, 324, 323, 646,
	214, 647, 882, 510, 256, 489, 330, 331, 4, 212,
	506, 253, 204, 208, 206, 209, 210, 350, 507, 504,
	505, 1097, 914, 1318, 922, 1272, 1335, 1270, 247, 61,
	341, 499, 500, 718, 1139, 457, 1138, 459, 460, 1394,
	716, 549, 548, 558, 559, 551, 552, 553, 554, 555,
	556, 557, 550, 1431, 1478, 560, 63, 64, 65, 66,
	67, 474, 509, 1473, 1160, 1426, 1135, 845, 717, 1414,
	906, 1495, 1499, 1063, 1065, 217, 491, 1364, 217, 493,
	475, 1140, 1372, 1132, 217, 463, 206, 1213, 722, 1134,
	1366, 217, 908, 709, 82, 908, 82, 82, 1212, 82,
	82, 1211, 82, 458, 82, 719, 1162, 466, 205, 490,
	492, 220, 207, 82, 940, 708, 966, 1016, 1423, 965,
	1401, 1090, 572, 573, 955, 558, 559, 551, 552, 553,
	554, 555, 556, 557, 550, 211, 471, 560, 1292, 1164,
	1146, 1168, 954, 1163, 82, 1161, 1073, 1026, 993, 752,
	1166, 640, 540, 524, 889, 486, 1064, 486, 486, 1165,
	486, 486, 922, 486, 1365, 486, 481, 560, 467, 1013,
	959, 473, 1167, 1169, 486, 1236, 878, 480, 1210, 953,
	512, 513, 550, 1493, 482, 560, 1494, 1435, 1492, 1373,
	1371, 1133, 749, 1131, 907, 52, 570, 907, 488, 1462,
	468, 533, 469, 70, 535, 470, 1123, 217, 217, 217,
	569, 534, 533, 571, 744, 525, 82, 535, 1395, 534,
	533, 974, 82, 1422, 572, 573, 1180, 1237, 535, 1178,
	950, 947, 948, 1412, 946, 1121, 535, 812, 1384, 71,
	623, 582, 456, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 628, 597, 600, 600, 600, 606, 600, 600,
	606, 600, 614, 615, 616, 617, 618, 619, 1198, 629,
	957, 960, 477, 478, 479, 454, 572, 573, 601, 603,
	605, 607, 609, 611, 612, 602, 604, 648, 608, 610,
	832, 613, 633, 711, 526, 350, 787, 638, 751, 745,
	622, 642, 632, 973, 1095, 1500, 952, 1011, 1122, 1010,
	785, 786, 784, 1127, 1124, 1117, 1125, 1120, 832, 1417,
	1023, 1118, 1119, 911, 55, 217, 534, 533, 951, 912,
	82, 990, 991, 992, 783, 1126, 217, 217, 82, 750,
	530, 203, 217, 535, 1501, 217, 908, 1443, 217, 1324,
	1323, 804, 217, 805, 82, 82, 534, 533, 1110, 82,
	82, 82, 217, 82, 82, 1109, 1098, 1079, 1410, 1080,
	82, 82, 956, 535, 1445, 456, 485, 1255, 551, 552,
	553, 554, 555, 556, 557, 550, 462, 958, 560, 1413,
	1342, 486, 1321, 1143, 1107, 1090, 1012, 1085, 82, 486,
	731, 806, 217, 309, 1369, 1477, 336, 337, 82, 553,
	554, 555, 556, 557, 550, 486, 486, 560, 656, 728,
	486, 486, 486, 727, 486, 486, 1450, 515, 723, 713,
	714, 486, 486, 755, 756, 720, 80, 757, 341, 781,
	712, 726, 710, 770, 772, 773, 534, 533, 907, 771,
	1369, 1429, 82, 904, 902, 737, 903, 706, 782, 778,
	776, 900, 906, 535, 464, 465, 1420, 1421, 1369, 515,
	515, 352, 483, 822, 825, 759, 1369, 1402, 1378, 833,
	476, 534, 533, 1377, 774, 82, 82, 1369, 1368, 1233,
	777, 909, 217, 1313, 1312, 766, 1294, 515, 535, 872,
	217, 635, 217, 52, 25, 217, 217, 1291, 515, 217,
	217, 217, 82, 1243, 1242, 23, 807, 808, 586, 300,
	299, 302, 303, 304, 305, 82, 1239, 1240, 301, 306,
	1239, 1238, 1035, 836, 1005, 515, 1036, 873, 817, 841,
	1185, 875, 829, 1197, 628, 848, 515, 815, 515, 628,
	655, 654, 636, 628, 847, 1466, 55, 1137, 1197, 731,
	815, 863, 864, 636, 1287, 1069, 629, 1069, 1383, 25,
	629, 25, 1149, 58, 871, 262, 876, 848, 880, 848,
	217, 82, 879, 82, 1241, 846, 1209, 82, 82, 217,
	217, 350, 217, 217, 1081, 896, 217, 82, 637, 874,
	639, 1347, 494, 495, 893, 496, 497, 937, 498, 637,
	501, 635, 848, 217, 1197, 217, 217, 1005, 217, 511,
	1005, 55, 264, 55, 1486, 881, 1029, 352, 1028, 352,
	352, 1005, 352, 352, 635, 352, 641, 352, 933, 934,
	753, 721, 486, 55, 486, 1461, 352, 1457, 1456, 1331,
	917, 918, 919, 920, 1326, 916, 1299, 936, 486, 923,
	924, 925, 1229, 1201, 1202, 939, 928, 929, 930, 1084,
	932, 778, 981, 941, 55, 927, 926, 538, 1482, 2,
	781, 1455, 963, 964, 1231, 967, 968, 982, 983, 969,
	853, 856, 857, 858, 854, 1204, 855, 859, 1185, 782,
	765, 1111, 777, 747, 515, 725, 971, 1052, 1050, 994,
	1207, 977, 1053, 1051, 995, 1054, 1206, 857, 858, 217,
	217, 217, 217, 217, 1049, 1048, 268, 269, 1470, 1042,
	1458, 217, 1145, 978, 217, 82, 257, 1464, 988, 217,
	987, 1043, 1102, 217, 1046, 653, 484, 1094, 1419, 352,
	853, 856, 857, 858, 854, 650, 855, 859, 1022, 1418,
	1201, 1202, 82, 628, 628, 628, 628, 628, 1345, 1092,
	529, 1086, 1071, 1285, 1072, 1070, 1038, 1039, 628, 1327,
	629, 629, 629, 629, 629, 527, 517, 628, 1055, 1082,
	514, 943, 724, 529, 1067, 863, 1037, 861, 1066, 1468,
	1044, 1045, 518, 1047, 629, 1467, 1074, 265, 266, 986,
	82, 259, 82, 1388, 1091, 817, 1101, 985, 1103, 1104,
	1105, 260, 58, 1387, 1333, 818, 819, 1087, 1088, 824,
	827, 828, 1069, 508, 1488, 1487, 707, 1017, 1014, 742,
	82, 893, 531, 1488, 715, 853, 856, 857, 858, 854,
	1108, 855, 859, 1398, 840, 217, 842, 843, 1319, 748,
	732, 733, 60, 352, 82, 734, 735, 736, 1128, 738,
	739, 352, 1115, 486, 62, 1, 740, 741, 1379, 1245,
	1480, 1254, 1328, 949, 1424, 1362, 1223, 352, 352, 1142,
	899, 890, 352, 352, 352, 69, 352, 352, 453, 68,
	1411, 486, 898, 352, 352, 897, 1370, 1099, 1100, 82,
	82, 1317, 1177, 1153, 910, 1186, 1152, 1042, 1096, 913,
	1230, 1158, 1093, 1416, 1171, 1170, 661, 659, 660, 658,
	663, 761, 1189, 662, 657, 232, 345, 82, 649, 1196,
	938, 538, 532, 1151, 352, 778, 981, 72, 1147, 1130,
	1129, 945, 82, 502, 82, 82, 1205, 503, 234, 568,
	1215, 984, 1075, 351, 1192, 1453, 1430, 754, 1190, 1217,
	52, 521, 277, 1214, 1386, 1332, 1181, 1021, 595, 830,
	285, 1222, 217, 769, 298, 809, 1221, 295, 296, 760,
	1191, 1226, 1034, 542, 1234, 1235, 1227, 1228, 283, 275,
	217, 834, 989, 627, 620, 852, 82, 850, 849, 82,
	82, 217, 340, 1203, 1199, 1303, 1058, 82, 838, 839,
	217, 1059, 626, 1148, 1280, 1393, 764, 27, 59, 270,
	20, 893, 19, 893, 18, 21, 17, 16, 15, 472,
	31, 22, 1259, 1247, 14, 352, 13, 1260, 12, 1004,
	11, 10, 1261, 9, 8, 1248, 7, 1250, 352, 758,
	6, 5, 261, 24, 628, 3, 1268, 1020, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 1286, 0, 1042,
	82, 629, 0, 0, 0, 0, 0, 942, 1295, 944,
	0, 0, 82, 1249, 1296, 0, 1151, 0, 0, 1302,
	82, 0, 1301, 970, 1258, 0, 0, 0, 1279, 0,
	0, 0, 0, 0, 352, 82, 352, 814, 816, 1082,
	961, 962, 0, 0, 82, 0, 0, 0, 1311, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 1308, 1309, 1265, 1266, 0, 1267,
	0, 0, 1269, 0, 1271, 0, 352, 0, 0, 0,
	0, 0, 82, 82, 0, 82, 0, 0, 0, 0,
	82, 893, 217, 0, 0, 0, 486, 1354, 82, 82,
	82, 217, 0, 1189, 82, 1358, 1359, 1360, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 1361,
	0, 1367, 82, 1330, 0, 1374, 0, 0, 1353, 1385,
	0, 1314, 0, 0, 0, 1375, 0, 1376, 0, 1190,
	0, 0, 1349, 0, 0, 0, 0, 217, 1320, 0,
	1322, 1399, 0, 0, 0, 0, 0, 1356, 1357, 1404,
	82, 0, 1348, 1189, 0, 1409, 1408, 0, 0, 1403,
	0, 834, 0, 0, 82, 82, 1334, 0, 0, 1382,
	574, 575, 576, 577, 578, 579, 580, 581, 1061, 1433,
	1427, 628, 82, 0, 0, 0, 0, 0, 1438, 1190,
	1042, 52, 1428, 0, 0, 217, 0, 0, 629, 0,
	0, 217, 0, 0, 217, 352, 0, 82, 0, 1446,
	0, 1400, 1448, 229, 0, 0, 1452, 25, 26, 53,
	28, 29, 0, 0, 0, 0, 0, 273, 1114, 0,
	0, 0, 0, 0, 0, 1465, 1463, 242, 0, 0,
	44, 0, 82, 1330, 893, 30, 49, 50, 0, 1471,
	1002, 1474, 0, 1112, 1003, 352, 1141, 0, 0, 0,
	0, 1007, 1008, 1009, 1485, 39, 0, 0, 1015, 55,
	1496, 1018, 1019, 0, 0, 0, 0, 1025, 0, 0,
	0, 1027, 0, 352, 1030, 1031, 1032, 1033, 1444, 221,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 352, 233, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 32, 33, 35, 34, 37, 0, 51, 0, 0,
	352, 231, 0, 0, 0, 0, 0, 241, 0, 834,
	0, 0, 1193, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 38, 45, 46, 0, 0, 47, 48,
	36, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 40, 41, 0, 42, 43, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 352, 1225, 0,
	235, 225, 226, 0, 236, 237, 238, 240, 0, 239,
	245, 0, 0, 0, 227, 230, 0, 223, 244, 243,
	0, 0, 0, 0, 0, 779, 0, 0, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 0, 0, 0, 0, 0, 1157, 1251,
	0, 0, 1256, 1257, 0, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 0, 0, 54, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 519, 523, 549,
	548, 558, 559, 551, 552, 553, 554, 555, 556, 557,
	550, 0, 1208, 560, 541, 0, 0, 215, 0, 0,
	246, 834, 548, 558, 559, 551, 552, 553, 554, 555,
	556, 557, 550, 1061, 0, 560, 0, 0, 0, 0,
	0, 1325, 0, 0, 274, 352, 0, 343, 0, 585,
	0, 0, 215, 1316, 215, 215, 515, 1000, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 549, 548,
	558, 559, 551, 552, 553, 554, 555, 556, 557, 550,
	0, 0, 560, 0, 549, 548, 558, 559, 551, 552,
	553, 554, 555, 556, 557, 550, 1262, 1246, 560, 0,
	0, 0, 0, 1264, 0, 1350, 1351, 1284, 1352, 0,
	0, 0, 0, 1316, 1273, 1274, 0, 0, 0, 0,
	0, 1316, 1316, 1316, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 1288, 1289, 1290, 0, 1293, 0,
	0, 0, 0, 0, 0, 1316, 549, 548, 558, 559,
	551, 552, 553, 554, 555, 556, 557, 550, 1310, 0,
	560, 1283, 0, 0, 0, 0, 0, 0, 996, 997,
	998, 834, 0, 0, 0, 215, 0, 0, 215, 0,
	0, 0, 0, 1415, 215, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 352, 352, 0,
	549, 548, 558, 559, 551, 552, 553, 554, 555, 556,
	557, 550, 834, 0, 560, 1440, 0, 0, 0, 0,
	0, 544, 0, 547, 1341, 0, 0, 0, 0, 561,
	562, 563, 564, 565, 566, 567, 746, 545, 546, 543,
	1451, 549, 548, 558, 559, 551, 552, 553, 554, 555,
	556, 557, 550, 0, 0, 560, 0, 0, 0, 0,
	0, 767, 768, 0, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	1389, 1390, 1391, 1392, 0, 0, 0, 1396, 1397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1405, 1406, 1407, 0, 0, 215, 215, 215,
	0, 0, 0, 0, 585, 0, 0, 820, 821, 0,
	0, 0, 0, 1113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 1434, 0, 0,
	0, 0, 0, 0, 1439, 0, 0, 1441, 1442, 549,
	548, 558, 559, 551, 552, 553, 554, 555, 556, 557,
	550, 0, 0, 560, 0, 0, 0, 0, 1449, 0,
	0, 0, 0, 0, 0, 0, 887, 0, 0, 0,
	0, 0, 0, 1155, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1172, 1173, 0, 1174,
	1175, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 1182, 1183, 549, 548, 558, 559, 551, 552, 553,
	554, 555, 556, 557, 550, 215, 0, 560, 0, 0,
	0, 0, 0, 1497, 1498, 1275, 215, 215, 0, 0,
	0, 0, 215, 0, 0, 215, 0, 0, 215, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 0, 0, 0, 1232, 979, 980,
	0, 523, 549, 548, 558, 559, 551, 552, 553, 554,
	555, 556, 557, 550, 0, 0, 560, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 549, 548, 558, 559, 551, 552,
	553, 554, 555, 556, 557, 550, 0, 0, 560, 0,
	0, 0, 0, 0, 0, 0, 0, 1263, 0, 0,
	0, 0, 0, 1006, 0, 0, 0, 0, 1154, 666,
	0, 0, 0, 274, 0, 0, 0, 0, 274, 274,
	1024, 0, 274, 274, 274, 0, 0, 0, 835, 549,
	548, 558, 559, 551, 552, 553, 554, 555, 556, 557,
	550, 0, 0, 560, 0, 0, 0, 274, 274, 274,
	274, 679, 215, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 869, 0, 0, 215, 215, 0, 0, 215,
	877, 730, 0, 692, 695, 696, 697, 698, 699, 700,
	0, 701, 702, 703, 704, 705, 680, 681, 682, 683,
	664, 665, 693, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 684, 685, 686, 687,
	688, 689, 690, 691, 0, 0, 0, 0, 1336, 1337,
	1338, 1339, 1340, 0, 0, 0, 1343, 1344, 549, 548,
	558, 559, 551, 552, 553, 554, 555, 556, 557, 550,
	215, 0, 560, 0, 0, 0, 0, 0, 0, 215,
	215, 0, 215, 215, 0, 0, 215, 0, 0, 0,
	0, 0, 1144, 0, 0, 0, 0, 0, 0, 694,
	0, 0, 0, 215, 0, 975, 976, 1001, 215, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 549, 548,
	558, 559, 551, 552, 553, 554, 555, 556, 557, 550,
	0, 1179, 560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	274, 0, 0, 0, 0, 1447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 215,
	215, 215, 215, 215, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 215, 0, 0, 0, 0, 869,
	0, 0, 0, 215, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 1298,
	0, 0, 1300, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 0, 1432, 585, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 835, 0,
	441, 429, 0, 400, 444, 378, 392, 452, 393, 394,
	422, 364, 408, 144, 390, 198, 105, 101, 83, 0,
	381, 359, 387, 360, 379, 402, 107, 405, 377, 431,
	411, 443, 124, 450, 126, 416, 0, 166, 135, 835,
	0, 404, 433, 406, 427, 399, 423, 369, 415, 445,
	391, 420, 446, 0, 0, 215, 81, 0, 894, 895,
	0, 1381, 0, 0, 1381, 98, 0, 418, 440, 389,
	419, 421, 358, 417, 0, 362, 365, 451, 435, 384,
	385, 1083, 0, 0, 0, 0, 0, 0, 403, 407,
	424, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 414, 0, 0, 0, 366, 363, 0,
	0, 401, 0, 0, 0, 368, 0, 383, 425, 0,
	357, 113, 147, 428, 218, 143, 182, 434, 0, 398,
	219, 438, 396, 395, 442, 152, 0, 169, 115, 123,
	85, 92, 0, 114, 141, 157, 161, 432, 380, 388,
	102, 386, 159, 146, 181, 413, 148, 158, 127, 174,
	153, 439, 189, 190, 171, 188, 197, 86, 170, 180,
	99, 162, 88, 178, 168, 133, 119, 120, 87, 0,
	156, 106, 111, 104, 142, 175, 176, 103, 201, 93,
	187, 90, 94, 186, 140, 173, 179, 134, 131, 89,
	177, 132, 130, 122, 109, 116, 150, 129, 151, 117,
	137, 136, 138, 0, 361, 0, 167, 184, 202, 96,
	376, 163, 172, 191, 192, 193, 194, 195, 196, 0,
	0, 97, 112, 108, 149, 139, 95, 118, 164, 121,
	128, 155, 200, 145, 160, 100, 183, 165, 372, 375,
	370, 371, 409, 410, 447, 448, 449, 426, 367, 0,
	373, 374, 0, 430, 436, 437, 412, 84, 91, 125,
	199, 154, 110, 185, 441, 429, 0, 400, 444, 378,
	392, 452, 393, 394, 422, 364, 408, 144, 390, 198,
	105, 101, 83, 0, 381, 359, 387, 360, 379, 402,
	107, 405, 377, 431, 411, 443, 124, 450, 126, 416,
	0, 166, 135, 0, 0, 404, 433, 406, 427, 399,
	423, 369, 415, 445, 391, 420, 446, 0, 0, 0,
	81, 0, 894, 895, 0, 0, 0, 0, 0, 98,
	0, 418, 440, 389, 419, 421, 358, 417, 0, 362,
	365, 451, 435, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 403, 407, 424, 397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 414, 0, 0,
	0, 366, 363, 0, 0, 401, 0, 0, 0, 368,
	0, 383, 425, 0, 357, 113, 147, 428, 218, 143,
	182, 434, 0, 398, 219, 438, 396, 395, 442, 152,
	0, 169, 115, 123, 85, 92, 0, 114, 141, 157,
	161, 432, 380, 388, 102, 386, 159, 146, 181, 413,
	148, 158, 127, 174, 153, 439, 189, 190, 171, 188,
	197, 86, 170, 180, 99, 162, 88, 178, 168, 133,
	119, 120, 87, 0, 156, 106, 111, 104, 142, 175,
	176, 103, 201, 93, 187, 90, 94, 186, 140, 173,
	179, 134, 131, 89, 177, 132, 130, 122, 109, 116,
	150, 129, 151, 117, 137, 136, 138, 0, 361, 0,
	167, 184, 202, 96, 376, 163, 172, 191, 192, 193,
	194, 195, 196, 0, 0, 97, 112, 108, 149, 139,
	95, 118, 164, 121, 128, 155, 200, 145, 160, 100,
	183, 165, 372, 375, 370, 371, 409, 410, 447, 448,
	449, 426, 367, 0, 373, 374, 0, 430, 436, 437,
	412, 84, 91, 125, 199, 154, 110, 185, 441, 429,
	0, 400, 444, 378, 392, 452, 393, 394, 422, 364,
	408, 144, 390, 198, 105, 101, 83, 0, 381, 359,
	387, 360, 379, 402, 107, 405, 377, 431, 411, 443,
	124, 450, 126, 416, 0, 166, 135, 0, 0, 404,
	433, 406, 427, 399, 423, 369, 415, 445, 391, 420,
	446, 55, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 418, 440, 389, 419, 421,
	358, 417, 0, 362, 365, 451, 435, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 403, 407, 424, 397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 414, 0, 0, 0, 366, 363, 0, 0, 401,
	0, 0, 0, 368, 0, 383, 425, 0, 357, 113,
	147, 428, 218, 143, 182, 434, 0, 398, 219, 438,
	396, 395, 442, 152, 0, 169, 115, 123, 85, 92,
	0, 114, 141, 157, 161, 432, 380, 388, 102, 386,
	159, 146, 181, 413, 148, 158, 127, 174, 153, 439,
	189, 190, 171, 188, 197, 86, 170, 180, 99, 162,
	88, 178, 168, 133, 119, 120, 87, 0, 156, 106,
	111, 104, 142, 175, 176, 103, 201, 93, 187, 90,
	94, 186, 140, 173, 179, 134, 131, 89, 177, 132,
	130, 122, 109, 116, 150, 129, 151, 117, 137, 136,
	138, 0, 361, 0, 167, 184, 202, 96, 376, 163,
	172, 191, 192, 193, 194, 195, 196, 0, 0, 97,
	112, 108, 149, 139, 95, 118, 164, 121, 128, 155,
	200, 145, 160, 100, 183, 165, 372, 375, 370, 371,
	409, 410, 447, 448, 449, 426, 367, 0, 373, 374,
	0, 430, 436, 437, 412, 84, 91, 125, 199, 154,
	110, 185, 441, 429, 0, 400, 444, 378, 392, 452,
	393, 394, 422, 364, 408, 144, 390, 198, 105, 101,
	83, 0, 381, 359, 387, 360, 379, 402, 107, 405,
	377, 431, 411, 443, 124, 450, 126, 416, 0, 166,
	135, 0, 0, 404, 433, 406, 427, 399, 423, 369,
	415, 445, 391, 420, 446, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 418,
	440, 389, 419, 421, 358, 417, 0, 362, 365, 451,
	435, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	403, 407, 424, 397, 0, 0, 0, 0, 0, 0,
	0, 1150, 0, 382, 0, 414, 0, 0, 0, 366,
	363, 0, 0, 401, 0, 0, 0, 368, 0, 383,
	425, 0, 357, 113, 147, 428, 218, 143, 182, 434,
	0, 398, 219, 438, 396, 395, 442, 152, 0, 169,
	115, 123, 85, 92, 0, 114, 141, 157, 161, 432,
	380, 388, 102, 386, 159, 146, 181, 413, 148, 158,
	127, 174, 153, 439, 189, 190, 171, 188, 197, 86,
	170, 180, 99, 162, 88, 178, 168, 133, 119, 120,
	87, 0, 156, 106, 111, 104, 142, 175, 176, 103,
	201, 93, 187, 90, 94, 186, 140, 173, 179, 134,
	131, 89, 177, 132, 130, 122, 109, 116, 150, 129,
	151, 117, 137, 136, 138, 0, 361, 0, 167, 184,
	202, 96, 376, 163, 172, 191, 192, 193, 194, 195,
	196, 0, 0, 97, 112, 108, 149, 139, 95, 118,
	164, 121, 128, 155, 200, 145, 160, 100, 183, 165,
	372, 375, 370, 371, 409, 410, 447, 448, 449, 426,
	367, 0, 373, 374, 0, 430, 436, 437, 412, 84,
	91, 125, 199, 154, 110, 185, 441, 429, 0, 400,
	444, 378, 392, 452, 393, 394, 422, 364, 408, 144,
	390, 198, 105, 101, 83, 0, 381, 359, 387, 360,
	379, 402, 107, 405, 377, 431, 411, 443, 124, 450,
	126, 416, 0, 166, 135, 0, 0, 404, 433, 406,
	427, 399, 423, 369, 415, 445, 391, 420, 446, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 418, 440, 389, 419, 421, 358, 417,
	0, 362, 365, 451, 435, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 403, 407, 424, 397, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 382, 0, 414,
	0, 0, 0, 366, 363, 0, 0, 401, 0, 0,
	0, 368, 0, 383, 425, 0, 357, 113, 147, 428,
	218, 143, 182, 434, 0, 398, 219, 438, 396, 395,
	442, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 432, 380, 388, 102, 386, 159, 146,
	181, 413, 148, 158, 127, 174, 153, 439, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	361, 0, 167, 184, 202, 96, 376, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 372, 375, 370, 371, 409, 410,
	447, 448, 449, 426, 367, 0, 373, 374, 0, 430,
	436, 437, 412, 84, 91, 125, 199, 154, 110, 185,
	441, 429, 0, 400, 444, 378, 392, 452, 393, 394,
	422, 364, 408, 144, 390, 198, 105, 101, 83, 0,
	381, 359, 387, 360, 379, 402, 107, 405, 377, 431,
	411, 443, 124, 450, 126, 416, 0, 166, 135, 0,
	0, 404, 433, 406, 427, 399, 423, 369, 415, 445,
	391, 420, 446, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 418, 440, 389,
	419, 421, 358, 417, 0, 362, 365, 451, 435, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 403, 407,
	424, 397, 0, 0, 0, 0, 0, 0, 0, 775,
	0, 382, 0, 414, 0, 0, 0, 366, 363, 0,
	0, 401, 0, 0, 0, 368, 0, 383, 425, 0,
	357, 113, 147, 428, 218, 143, 182, 434, 0, 398,
	219, 438, 396, 395, 442, 152, 0, 169, 115, 123,
	85, 92, 0, 114, 141, 157, 161, 432, 380, 388,
	102, 386, 159, 146, 181, 413, 148, 158, 127, 174,
	153, 439, 189, 190, 171, 188, 197, 86, 170, 180,
	99, 162, 88, 178, 168, 133, 119, 120, 87, 0,
	156, 106, 111, 104, 142, 175, 176, 103, 201, 93,
	187, 90, 94, 186, 140, 173, 179, 134, 131, 89,
	177, 132, 130, 122, 109, 116, 150, 129, 151, 117,
	137, 136, 138, 0, 361, 0, 167, 184, 202, 96,
	376, 163, 172, 191, 192, 193, 194, 195, 196, 0,
	0, 97, 112, 108, 149, 139, 95, 118, 164, 121,
	128, 155, 200, 145, 160, 100, 183, 165, 372, 375,
	370, 371, 409, 410, 447, 448, 449, 426, 367, 0,
	373, 374, 0, 430, 436, 437, 412, 84, 91, 125,
	199, 154, 110, 185, 441, 429, 0, 400, 444, 378,
	392, 452, 393, 394, 422, 364, 408, 144, 390, 198,
	105, 101, 83, 0, 381, 359, 387, 360, 379, 402,
	107, 405, 377, 431, 411, 443, 124, 450, 126, 416,
	0, 166, 135, 0, 0, 404, 433, 406, 427, 399,
	423, 369, 415, 445, 391, 420, 446, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 418, 440, 389, 419, 421, 358, 417, 0, 362,
	365, 451, 435, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 403, 407, 424, 397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 414, 0, 0,
	0, 366, 363, 0, 0, 401, 0, 0, 0, 368,
	0, 383, 425, 0, 357, 113, 147, 428, 218, 143,
	182, 434, 0, 398, 219, 438, 396, 395, 442, 152,
	0, 169, 115, 123, 85, 92, 0, 114, 141, 157,
	161, 432, 380, 388, 102, 386, 159, 146, 181, 413,
	148, 158, 127, 174, 153, 439, 189, 190, 171, 188,
	197, 86, 170, 180, 99, 162, 88, 178, 168, 133,
	119, 120, 87, 0, 156, 106, 111, 104, 142, 175,
	176, 103, 201, 93, 187, 90, 94, 186, 140, 173,
	179, 134, 131, 89, 177, 132, 130, 122, 109, 116,
	150, 129, 151, 117, 137, 136, 138, 0, 361, 0,
	167, 184, 202, 96, 376, 163, 172, 191, 192, 193,
	194, 195, 196, 0, 0, 97, 112, 108, 149, 139,
	95, 118, 164, 121, 128, 155, 200, 145, 160, 100,
	183, 165, 372, 375, 370, 371, 409, 410, 447, 448,
	449, 426, 367, 0, 373, 374, 0, 430, 436, 437,
	412, 84, 91, 125, 199, 154, 110, 185, 441, 429,
	0, 400, 444, 378, 392, 452, 393, 394, 422, 364,
	408, 144, 390, 198, 105, 101, 83, 0, 381, 359,
	387, 360, 379, 402, 107, 405, 377, 431, 411, 443,
	124, 450, 126, 416, 0, 166, 135, 0, 0, 404,
	433, 406, 427, 399, 423, 369, 415, 445, 391, 420,
	446, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 418, 440, 389, 419, 421,
	358, 417, 0, 362, 365, 451, 435, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 403, 407, 424, 397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 414, 0, 0, 0, 366, 363, 0, 0, 401,
	0, 0, 0, 368, 0, 383, 425, 0, 357, 113,
	147, 428, 218, 143, 182, 434, 0, 398, 219, 438,
	396, 395, 442, 152, 0, 169, 115, 123, 85, 92,
	0, 114, 141, 157, 161, 432, 380, 388, 102, 386,
	159, 146, 181, 413, 148, 158, 127, 174, 153, 439,
	189, 190, 171, 188, 197, 86, 170, 180, 99, 162,
	88, 178, 168, 133, 119, 120, 87, 0, 156, 106,
	111, 104, 142, 175, 176, 103, 201, 93, 187, 90,
	94, 186, 140, 173, 179, 134, 131, 89, 177, 132,
	130, 122, 109, 116, 150, 129, 151, 117, 137, 136,
	138, 0, 361, 0, 167, 184, 202, 96, 376, 163,
	172, 191, 192, 193, 194, 195, 196, 0, 0, 97,
	112, 108, 149, 139, 95, 118, 164, 121, 128, 155,
	200, 145, 160, 100, 183, 165, 372, 375, 370, 371,
	409, 410, 447, 448, 449, 426, 367, 0, 373, 374,
	0, 430, 436, 437, 412, 84, 91, 125, 199, 154,
	110, 185, 441, 429, 0, 400, 444, 378, 392, 452,
	393, 394, 422, 364, 408, 144, 390, 198, 105, 101,
	83, 0, 381, 359, 387, 360, 379, 402, 107, 405,
	377, 431, 411, 443, 124, 450, 126, 416, 0, 166,
	135, 0, 0, 404, 433, 406, 427, 399, 423, 369,
	415, 445, 391, 420, 446, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 418,
	440, 389, 419, 421, 358, 417, 0, 362, 365, 451,
	435, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	403, 407, 424, 397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 414, 0, 0, 0, 366,
	363, 0, 0, 401, 0, 0, 0, 368, 0, 383,
	425, 0, 357, 113, 147, 428, 218, 143, 182, 434,
	0, 398, 219, 438, 396, 395, 442, 152, 0, 169,
	115, 123, 85, 92, 0, 114, 141, 157, 161, 432,
	380, 388, 102, 386, 159, 146, 181, 413, 148, 158,
	127, 174, 153, 439, 189, 190, 171, 188, 197, 86,
	170, 180, 99, 162, 88, 178, 168, 133, 119, 120,
	87, 0, 156, 106, 111, 104, 142, 175, 176, 103,
	201, 93, 187, 90, 355, 186, 140, 173, 179, 134,
	131, 89, 177, 132, 130, 122, 109, 116, 150, 129,
	151, 117, 137, 136, 138, 0, 361, 0, 167, 184,
	202, 96, 376, 163, 172, 191, 192, 193, 194, 195,
	196, 0, 0, 97, 112, 108, 149, 356, 354, 118,
	164, 121, 128, 155, 200, 145, 160, 100, 183, 165,
	372, 375, 370, 371, 409, 410, 447, 448, 449, 426,
	367, 0, 373, 374, 0, 430, 436, 437, 412, 84,
	91, 125, 199, 154, 110, 185, 441, 429, 0, 400,
	444, 378, 392, 452, 393, 394, 422, 364, 408, 144,
	390, 198, 105, 101, 83, 0, 381, 359, 387, 360,
	379, 402, 107, 405, 377, 431, 411, 443, 124, 450,
	126, 416, 0, 166, 135, 0, 0, 404, 433, 406,
	427, 399, 423, 369, 415, 445, 391, 420, 446, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 418, 440, 389, 419, 421, 358, 417,
	0, 362, 365, 451, 435, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 403, 407, 424, 397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 414,
	0, 0, 0, 366, 363, 0, 0, 401, 0, 0,
	0, 368, 0, 383, 425, 0, 357, 113, 147, 428,
	218, 143, 182, 434, 0, 398, 219, 438, 396, 395,
	442, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 432, 380, 388, 102, 386, 159, 146,
	181, 413, 148, 158, 127, 174, 153, 439, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	361, 0, 167, 184, 202, 96, 376, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 372, 375, 370, 371, 409, 410,
	447, 448, 449, 426, 367, 0, 373, 374, 0, 430,
	436, 437, 412, 84, 91, 125, 199, 154, 110, 185,
	441, 429, 0, 400, 444, 378, 392, 452, 393, 394,
	422, 364, 408, 144, 390, 198, 105, 101, 83, 0,
	381, 359, 387, 360, 379, 402, 107, 405, 377, 431,
	411, 443, 124, 450, 126, 416, 0, 166, 135, 0,
	0, 404, 433, 406, 427, 399, 423, 369, 415, 445,
	391, 420, 446, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 418, 440, 389,
	419, 421, 358, 417, 0, 362, 365, 451, 435, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 403, 407,
	424, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 414, 0, 0, 0, 366, 363, 0,
	0, 401, 0, 0, 0, 368, 0, 383, 425, 0,
	357, 113, 147, 428, 218, 143, 182, 434, 0, 398,
	219, 438, 396, 395, 442, 152, 0, 169, 115, 123,
	85, 92, 0, 114, 141, 157, 161, 432, 380, 388,
	102, 386, 159, 146, 181, 413, 148, 158, 127, 174,
	153, 439, 189, 190, 171, 188, 197, 86, 170, 643,
	99, 162, 88, 178, 168, 133, 119, 120, 87, 0,
	156, 106, 111, 104, 142, 175, 176, 103, 201, 93,
	187, 90, 355, 186, 140, 173, 179, 134, 131, 89,
	177, 132, 130, 122, 109, 116, 150, 129, 151, 117,
	137, 136, 138, 0, 361, 0, 167, 184, 202, 96,
	376, 163, 172, 191, 192, 193, 194, 195, 196, 0,
	0, 97, 112, 108, 149, 356, 354, 118, 164, 121,
	128, 155, 200, 145, 160, 100, 183, 165, 372, 375,
	370, 371, 409, 410, 447, 448, 449, 426, 367, 0,
	373, 374, 0, 430, 436, 437, 412, 84, 91, 125,
	199, 154, 110, 185, 441, 429, 0, 400, 444, 378,
	392, 452, 393, 394, 422, 364, 408, 144, 390, 198,
	105, 101, 83, 0, 381, 359, 387, 360, 379, 402,
	107, 405, 377, 431, 411, 443, 124, 450, 126, 416,
	0, 166, 135, 0, 0, 404, 433, 406, 427, 399,
	423, 369, 415, 445, 391, 420, 446, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 418, 440, 389, 419, 421, 358, 417, 0, 362,
	365, 451, 435, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 403, 407, 424, 397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 414, 0, 0,
	0, 366, 363, 0, 0, 401, 0, 0, 0, 368,
	0, 383, 425, 0, 357, 113, 147, 428, 218, 143,
	182, 434, 0, 398, 219, 438, 396, 395, 442, 152,
	0, 169, 115, 123, 85, 92, 0, 114, 141, 157,
	161, 432, 380, 388, 102, 386, 159, 146, 181, 413,
	148, 158, 127, 174, 153, 439, 189, 190, 171, 188,
	197, 86, 170, 346, 99, 162, 88, 178, 168, 133,
	119, 120, 87, 0, 156, 106, 111, 104, 142, 175,
	176, 103, 201, 93, 187, 90, 355, 186, 140, 173,
	179, 134, 131, 89, 177, 132, 130, 122, 109, 116,
	150, 129, 151, 117, 137, 136, 138, 0, 361, 0,
	167, 184, 202, 96, 376, 163, 172, 191, 192, 193,
	194, 195, 196, 0, 0, 97, 112, 108, 149, 356,
	354, 349, 348, 121, 128, 155, 200, 145, 160, 100,
	183, 165, 372, 375, 370, 371, 409, 410, 447, 448,
	449, 426, 367, 0, 373, 374, 0, 430, 436, 437,
	412, 84, 91, 125, 199, 154, 110, 185, 144, 0,
	198, 105, 101, 83, 0, 0, 0, 281, 0, 0,
	0, 107, 0, 278, 0, 0, 0, 124, 321, 126,
	0, 0, 166, 135, 0, 0, 0, 0, 312, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 279, 300, 299, 302, 303, 304, 305, 0, 0,
	98, 301, 306, 307, 308, 0, 0, 0, 276, 293,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 0, 0, 0, 0, 334, 0,
	292, 0, 0, 287, 288, 289, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 147, 0, 218,
	143, 182, 1305, 1306, 0, 219, 0, 0, 332, 0,
	152, 0, 169, 115, 123, 85, 92, 0, 114, 141,
	157, 161, 0, 0, 0, 102, 0, 159, 146, 181,
	0, 148, 158, 127, 174, 153, 0, 189, 190, 171,
	188, 197, 86, 170, 180, 99, 162, 88, 178, 168,
	133, 119, 120, 87, 0, 156, 106, 111, 104, 142,
	175, 176, 103, 201, 93, 187, 90, 94, 186, 140,
	173, 179, 134, 131, 89, 177, 132, 130, 122, 109,
	116, 150, 129, 151, 117, 137, 136, 138, 0, 0,
	0, 167, 184, 202, 96, 0, 163, 172, 191, 192,
	193, 194, 195, 196, 0, 0, 97, 112, 108, 149,
	139, 95, 118, 164, 121, 128, 155, 200, 145, 160,
	100, 183, 165, 322, 333, 328, 329, 326, 327, 325,
	324, 323, 335, 314, 315, 316, 317, 319, 0, 330,
	331, 318, 84, 91, 125, 199, 154, 110, 185, 144,
	0, 198, 105, 101, 83, 0, 0, 0, 281, 0,
	0, 0, 107, 0, 278, 0, 0, 0, 124, 321,
	126, 0, 0, 166, 135, 0, 0, 0, 0, 312,
	313, 0, 0, 0, 0, 0, 0, 885, 0, 55,
	0, 0, 279, 300, 299, 302, 303, 304, 305, 0,
	0, 98, 301, 306, 307, 308, 886, 0, 0, 276,
	293, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 0, 0, 0, 0, 334,
	0, 292, 0, 0, 287, 288, 289, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 147, 0,
	218, 143, 182, 0, 0, 0, 219, 0, 0, 332,
	0, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 0, 0, 0, 102, 0, 159, 146,
	181, 0, 148, 158, 127, 174, 153, 0, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	0, 0, 167, 184, 202, 96, 0, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 322, 333, 328, 329, 326, 327,
	325, 324, 323, 335, 314, 315, 316, 317, 319, 0,
	330, 331, 318, 84, 91, 125, 199, 154, 110, 185,
	144, 0, 198, 105, 101, 83, 0, 811, 0, 281,
	0, 0, 0, 107, 0, 278, 0, 0, 0, 124,
	321, 126, 0, 0, 166, 135, 0, 0, 0, 0,
	312, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 279, 300, 299, 302, 303, 304, 305,
	0, 0, 98, 301, 306, 307, 308, 0, 0, 0,
	276, 293, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 272, 0, 0, 0,
	334, 0, 292, 0, 0, 287, 288, 289, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 147,
	0, 218, 143, 182, 0, 0, 0, 219, 0, 0,
	332, 0, 152, 0, 169, 115, 123, 85, 92, 0,
	114, 141, 157, 161, 0, 0, 0, 102, 0, 159,
	146, 181, 0, 148, 158, 127, 174, 153, 0, 189,
	190, 171, 188, 197, 86, 170, 180, 99, 162, 88,
	178, 168, 133, 119, 120, 87, 0, 156, 106, 111,
	104, 142, 175, 176, 103, 201, 93, 187, 90, 94,
	186, 140, 173, 179, 134, 131, 89, 177, 132, 130,
	122, 109, 116, 150, 129, 151, 117, 137, 136, 138,
	0, 0, 0, 167, 184, 202, 96, 0, 163, 172,
	191, 192, 193, 194, 195, 196, 0, 0, 97, 112,
	108, 149, 139, 95, 118, 164, 121, 128, 155, 200,
	145, 160, 100, 183, 165, 322, 333, 328, 329, 326,
	327, 325, 324, 323, 335, 314, 315, 316, 317, 319,
	0, 330, 331, 318, 84, 91, 125, 199, 154, 110,
	185, 144, 0, 198, 105, 101, 83, 0, 0, 0,
	281, 0, 0, 0, 107, 0, 278, 0, 0, 0,
	124, 321, 126, 0, 0, 166, 135, 0, 0, 0,
	0, 312, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 0, 515, 279, 300, 299, 302, 303, 304,
	305, 0, 0, 98, 301, 306, 307, 308, 0, 0,
	0, 276, 293, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 0, 0, 0,
	0, 334, 0, 292, 0, 0, 287, 288, 289, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	147, 0, 218, 143, 182, 0, 0, 0, 219, 0,
	0, 332, 0, 152, 0, 169, 115, 123, 85, 92,
	0, 114, 141, 157, 161, 0, 0, 0, 102, 0,
	159, 146, 181, 0, 148, 158, 127, 174, 153, 0,
	189, 190, 171, 188, 197, 86, 170, 180, 99, 162,
	88, 178, 168, 133, 119, 120, 87, 0, 156, 106,
	111, 104, 142, 175, 176, 103, 201, 93, 187, 90,
	94, 186, 140, 173, 179, 134, 131, 89, 177, 132,
	130, 122, 109, 116, 150, 129, 151, 117, 137, 136,
	138, 0, 0, 0, 167, 184, 202, 96, 0, 163,
	172, 191, 192, 193, 194, 195, 196, 0, 0, 97,
	112, 108, 149, 139, 95, 118, 164, 121, 128, 155,
	200, 145, 160, 100, 183, 165, 322, 333, 328, 329,
	326, 327, 325, 324, 323, 335, 314, 315, 316, 317,
	319, 0, 330, 331, 318, 84, 91, 125, 199, 154,
	110, 185, 144, 0, 198, 105, 101, 83, 0, 0,
	0, 281, 0, 0, 0, 107, 0, 278, 0, 0,
	0, 124, 321, 126, 0, 0, 166, 135, 0, 0,
	0, 0, 312, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 279, 300, 299, 302, 303,
	304, 305, 0, 0, 98, 301, 306, 307, 308, 0,
	0, 0, 276, 293, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 272, 0,
	0, 0, 334, 0, 292, 0, 0, 287, 288, 289,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 147, 0, 218, 143, 182, 0, 0, 0, 219,
	0, 0, 332, 0, 152, 0, 169, 115, 123, 85,
	92, 0, 114, 141, 157, 161, 0, 0, 0, 102,
	0, 159, 146, 181, 0, 148, 158, 127, 174, 153,
	0, 189, 190, 171, 188, 197, 86, 170, 180, 99,
	162, 88, 178, 168, 133, 119, 120, 87, 0, 156,
	106, 111, 104, 142, 175, 176, 103, 201, 93, 187,
	90, 94, 186, 140, 173, 179, 134, 131, 89, 177,
	132, 130, 122, 109, 116, 150, 129, 151, 117, 137,
	136, 138, 0, 0, 0, 167, 184, 202, 96, 0,
	163, 172, 191, 192, 193, 194, 195, 196, 0, 0,
	97, 112, 108, 149, 139, 95, 118, 164, 121, 128,
	155, 200, 145, 160, 100, 183, 165, 322, 333, 328,
	329, 326, 327, 325, 324, 323, 335, 314, 315, 316,
	317, 319, 0, 330, 331, 318, 84, 91, 125, 199,
	154, 110, 185, 144, 0, 198, 105, 101, 83, 0,
	0, 0, 281, 0, 0, 0, 107, 0, 278, 0,
	0, 0, 124, 321, 126, 0, 0, 166, 135, 0,
	0, 0, 0, 312, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 279, 300, 826, 302,
	303, 304, 305, 0, 0, 98, 301, 306, 307, 308,
	0, 0, 0, 276, 293, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 272,
	0, 0, 0, 334, 0, 292, 0, 0, 287, 288,
	289, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 147, 0, 218, 143, 182, 0, 0, 0,
	219, 0, 0, 332, 0, 152, 0, 169, 115, 123,
	85, 92, 0, 114, 141, 157, 161, 0, 0, 0,
	102, 0, 159, 146, 181, 0, 148, 158, 127, 174,
	153, 0, 189, 190, 171, 188, 197, 86, 170, 180,
	99, 162, 88, 178, 168, 133, 119, 120, 87, 0,
	156, 106, 111, 104, 142, 175, 176, 103, 201, 93,
	187, 90, 94, 186, 140, 173, 179, 134, 131, 89,
	177, 132, 130, 122, 109, 116, 150, 129, 151, 117,
	137, 136, 138, 0, 0, 0, 167, 184, 202, 96,
	0, 163, 172, 191, 192, 193, 194, 195, 196, 0,
	0, 97, 112, 108, 149, 139, 95, 118, 164, 121,
	128, 155, 200, 145, 160, 100, 183, 165, 322, 333,
	328, 329, 326, 327, 325, 324, 323, 335, 314, 315,
	316, 317, 319, 0, 330, 331, 318, 84, 91, 125,
	199, 154, 110, 185, 144, 0, 198, 105, 101, 83,
	0, 0, 0, 281, 0, 0, 0, 107, 0, 278,
	0, 0, 0, 124, 321, 126, 0, 0, 166, 135,
	0, 0, 0, 0, 312, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 279, 300, 823,
	302, 303, 304, 305, 0, 0, 98, 301, 306, 307,
	308, 0, 0, 0, 276, 293, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	272, 0, 0, 0, 334, 0, 292, 0, 0, 287,
	288, 289, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 147, 0, 218, 143, 182, 0, 0,
	0, 219, 0, 0, 332, 0, 152, 0, 169, 115,
	123, 85, 92, 0, 114, 141, 157, 161, 0, 0,
	0, 102, 0, 159, 146, 181, 0, 148, 158, 127,
	174, 153, 0, 189, 190, 171, 188, 197, 86, 170,
	180, 99, 162, 88, 178, 168, 133, 119, 120, 87,
	0, 156, 106, 111, 104, 142, 175, 176, 103, 201,
	93, 187, 90, 94, 186, 140, 173, 179, 134, 131,
	89, 177, 132, 130, 122, 109, 116, 150, 129, 151,
	117, 137, 136, 138, 0, 0, 0, 167, 184, 202,
	96, 0, 163, 172, 191, 192, 193, 194, 195, 196,
	0, 0, 97, 112, 108, 149, 139, 95, 118, 164,
	121, 128, 155, 200, 145, 160, 100, 183, 165, 322,
	333, 328, 329, 326, 327, 325, 324, 323, 335, 314,
	315, 316, 317, 319, 25, 330, 331, 318, 84, 91,
	125, 199, 154, 110, 185, 0, 144, 0, 198, 105,
	101, 83, 0, 0, 0, 281, 0, 0, 0, 107,
	0, 278, 0, 0, 0, 124, 321, 126, 0, 0,
	166, 135, 0, 0, 0, 0, 312, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 279,
	300, 299, 302, 303, 304, 305, 0, 0, 98, 301,
	306, 307, 308, 0, 0, 0, 276, 293, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 0, 0, 0, 0, 334, 0, 292, 0,
	0, 287, 288, 289, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 147, 0, 218, 143, 182,
	0, 0, 0, 219, 0, 0, 332, 0, 152, 0,
	169, 115, 123, 85, 92, 0, 114, 141, 157, 161,
	0, 0, 0, 102, 0, 159, 146, 181, 0, 148,
	158, 127, 174, 153, 0, 189, 190, 171, 188, 197,
	86, 170, 180, 99, 162, 88, 178, 168, 133, 119,
	120, 87, 0, 156, 106, 111, 104, 142, 175, 176,
	103, 201, 93, 187, 90, 94, 186, 140, 173, 179,
	134, 131, 89, 177, 132, 130, 122, 109, 116, 150,
	129, 151, 117, 137, 136, 138, 0, 0, 0, 167,
	184, 202, 96, 0, 163, 172, 191, 192, 193, 194,
	195, 196, 0, 0, 97, 112, 108, 149, 139, 95,
	118, 164, 121, 128, 155, 200, 145, 160, 100, 183,
	165, 322, 333, 328, 329, 326, 327, 325, 324, 323,
	335, 314, 315, 316, 317, 319, 0, 330, 331, 318,
	84, 91, 125, 199, 154, 110, 185, 144, 0, 198,
	105, 101, 83, 0, 0, 0, 281, 0, 0, 0,
	107, 0, 278, 0, 0, 0, 124, 321, 126, 0,
	0, 166, 135, 0, 0, 0, 0, 312, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	279, 300, 299, 302, 303, 304, 305, 0, 0, 98,
	301, 306, 307, 308, 0, 0, 0, 276, 293, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 0, 0, 0, 0, 334, 0, 292,
	0, 0, 287, 288, 289, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 147, 0, 218, 143,
	182, 0, 0, 0, 219, 0, 0, 332, 0, 152,
	0, 169, 115, 123, 85, 92, 0, 114, 141, 157,
	161, 0, 0, 0, 102, 0, 159, 146, 181, 0,
	148, 158, 127, 174, 153, 0, 189, 190, 171, 188,
	197, 86, 170, 180, 99, 162, 88, 178, 168, 133,
	119, 120, 87, 0, 156, 106, 111, 104, 142, 175,
	176, 103, 201, 93, 187, 90, 94, 186, 140, 173,
	179, 134, 131, 89, 177, 132, 130, 122, 109, 116,
	150, 129, 151, 117, 137, 136, 138, 0, 0, 0,
	167, 184, 202, 96, 0, 163, 172, 191, 192, 193,
	194, 195, 196, 0, 0, 97, 112, 108, 149, 139,
	95, 118, 164, 121, 128, 155, 200, 145, 160, 100,
	183, 165, 322, 333, 328, 329, 326, 327, 325, 324,
	323, 335, 314, 315, 316, 317, 319, 0, 330, 331,
	318, 84, 91, 125, 199, 154, 110, 185, 144, 0,
	198, 105, 101, 83, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 124, 321, 126,
	0, 0, 166, 135, 0, 0, 0, 0, 312, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 279, 300, 299, 302, 303, 304, 305, 0, 0,
	98, 301, 306, 307, 308, 0, 0, 0, 0, 293,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 0, 0, 0, 0, 334, 0,
	292, 0, 0, 287, 288, 289, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 147, 0, 218,
	143, 182, 0, 0, 0, 219, 0, 0, 332, 0,
	152, 0, 169, 115, 123, 85, 92, 0, 114, 141,
	157, 161, 0, 0, 0, 102, 0, 159, 146, 181,
	1490, 148, 158, 127, 174, 153, 0, 189, 190, 171,
	188, 197, 86, 170, 180, 99, 162, 88, 178, 168,
	133, 119, 120, 87, 0, 156, 106, 111, 104, 142,
	175, 176, 103, 201, 93, 187, 90, 94, 186, 140,
	173, 179, 134, 131, 89, 177, 132, 130, 122, 109,
	116, 150, 129, 151, 117, 137, 136, 138, 0, 0,
	0, 167, 184, 202, 96, 0, 163, 172, 191, 192,
	193, 194, 195, 196, 0, 0, 97, 112, 108, 149,
	139, 95, 118, 164, 121, 128, 155, 200, 145, 160,
	100, 183, 165, 322, 333, 328, 329, 326, 327, 325,
	324, 323, 335, 314, 315, 316, 317, 319, 0, 330,
	331, 318, 84, 91, 125, 199, 154, 110, 185, 144,
	0, 198, 105, 101, 83, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 124, 321,
	126, 0, 0, 166, 135, 0, 0, 0, 0, 312,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	0, 515, 279, 300, 299, 302, 303, 304, 305, 0,
	0, 98, 301, 306, 307, 308, 0, 0, 0, 0,
	293, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 0, 0, 0, 0, 334,
	0, 292, 0, 0, 287, 288, 289, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 147, 0,
	218, 143, 182, 0, 0, 0, 219, 0, 0, 332,
	0, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 0, 0, 0, 102, 0, 159, 146,
	181, 0, 148, 158, 127, 174, 153, 0, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	0, 0, 167, 184, 202, 96, 0, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 322, 333, 328, 329, 326, 327,
	325, 324, 323, 335, 314, 315, 316, 317, 319, 0,
	330, 331, 318, 84, 91, 125, 199, 154, 110, 185,
	144, 0, 198, 105, 101, 83, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 124,
	321, 126, 0, 0, 166, 135, 0, 0, 0, 0,
	312, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 279, 300, 299, 302, 303, 304, 305,
	0, 0, 98, 301, 306, 307, 308, 0, 0, 0,
	0, 293, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 0, 0, 0, 0,
	334, 0, 292, 0, 0, 287, 288, 289, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 147,
	0, 218, 143, 182, 0, 0, 0, 219, 0, 0,
	332, 0, 152, 0, 169, 115, 123, 85, 92, 0,
	114, 141, 157, 161, 0, 0, 0, 102, 0, 159,
	146, 181, 0, 148, 158, 127, 174, 153, 0, 189,
	190, 171, 188, 197, 86, 170, 180, 99, 162, 88,
	178, 168, 133, 119, 120, 87, 0, 156, 106, 111,
	104, 142, 175, 176, 103, 201, 93, 187, 90, 94,
	186, 140, 173, 179, 134, 131, 89, 177, 132, 130,
	122, 109, 116, 150, 129, 151, 117, 137, 136, 138,
	0, 0, 0, 167, 184, 202, 96, 0, 163, 172,
	191, 192, 193, 194, 195, 196, 0, 0, 97, 112,
	108, 149, 139, 95, 118, 164, 121, 128, 155, 200,
	145, 160, 100, 183, 165, 322, 333, 328, 329, 326,
	327, 325, 324, 323, 335, 314, 315, 316, 317, 319,
	0, 330, 331, 318, 84, 91, 125, 199, 154, 110,
	185, 144, 0, 198, 105, 101, 83, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	124, 0, 126, 0, 0, 166, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 548, 558, 559, 551, 552, 553, 554, 555,
	556, 557, 550, 0, 0, 560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	147, 0, 218, 143, 182, 0, 0, 0, 219, 0,
	0, 0, 0, 152, 0, 169, 115, 123, 85, 92,
	0, 114, 141, 157, 161, 0, 0, 0, 102, 0,
	159, 146, 181, 0, 148, 158, 127, 174, 153, 0,
	189, 190, 171, 188, 197, 86, 170, 180, 99, 162,
	88, 178, 168, 133, 119, 120, 87, 0, 156, 106,
	111, 104, 142, 175, 176, 103, 201, 93, 187, 90,
	94, 186, 140, 173, 179, 134, 131, 89, 177, 132,
	130, 122, 109, 116, 150, 129, 151, 117, 137, 136,
	138, 0, 0, 0, 167, 184, 202, 96, 0, 163,
	172, 191, 192, 193, 194, 195, 196, 0, 0, 97,
	112, 108, 149, 139, 95, 118, 164, 121, 128, 155,
	200, 145, 160, 100, 183, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 91, 125, 199, 154,
	110, 185, 144, 0, 198, 105, 101, 83, 0, 0,
	537, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 124, 0, 126, 0, 0, 166, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 539, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 0, 0,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 147, 0, 218, 143, 182, 0, 0, 0, 219,
	0, 0, 0, 0, 152, 0, 169, 115, 123, 85,
	92, 0, 114, 141, 157, 161, 0, 0, 0, 102,
	0, 159, 146, 181, 0, 148, 158, 127, 174, 153,
	0, 189, 190, 171, 188, 197, 86, 170, 180, 99,
	162, 88, 178, 168, 133, 119, 120, 87, 0, 156,
	106, 111, 104, 142, 175, 176, 103, 201, 93, 187,
	90, 94, 186, 140, 173, 179, 134, 131, 89, 177,
	132, 130, 122, 109, 116, 150, 129, 151, 117, 137,
	136, 138, 0, 0, 0, 167, 184, 202, 96, 0,
	163, 172, 191, 192, 193, 194, 195, 196, 0, 0,
	97, 112, 108, 149, 139, 95, 118, 164, 121, 128,
	155, 200, 145, 160, 100, 183, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 198, 105, 101, 83, 84, 91, 125, 199,
	154, 110, 185, 107, 0, 0, 0, 0, 0, 124,
	0, 126, 0, 0, 166, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 147,
	77, 74, 143, 182, 78, 0, 0, 73, 0, 0,
	0, 79, 152, 0, 169, 115, 123, 85, 92, 0,
	114, 141, 157, 161, 0, 0, 0, 102, 0, 159,
	146, 181, 0, 148, 158, 127, 174, 153, 0, 189,
	190, 171, 188, 197, 86, 170, 180, 99, 162, 88,
	178, 168, 133, 119, 120, 87, 0, 156, 106, 111,
	104, 142, 175, 176, 103, 201, 93, 187, 90, 94,
	186, 140, 173, 179, 134, 131, 89, 177, 132, 130,
	122, 109, 116, 150, 129, 151, 117, 137, 136, 138,
	0, 0, 0, 167, 184, 202, 96, 0, 163, 172,
	191, 192, 193, 194, 195, 196, 0, 0, 97, 112,
	108, 149, 139, 95, 118, 164, 121, 128, 155, 200,
	145, 160, 100, 183, 165, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 91, 125, 199, 154, 110,
	185, 144, 0, 198, 105, 101, 83, 0, 0, 868,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	124, 0, 126, 0, 0, 166, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 870, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	147, 0, 218, 143, 182, 0, 0, 0, 219, 0,
	0, 0, 0, 152, 0, 169, 115, 123, 85, 92,
	0, 114, 141, 157, 161, 0, 0, 0, 102, 0,
	159, 146, 181, 0, 148, 158, 127, 174, 153, 0,
	189, 190, 171, 188, 197, 86, 170, 180, 99, 162,
	88, 178, 168, 133, 119, 120, 87, 0, 156, 106,
	111, 104, 142, 175, 176, 103, 201, 93, 187, 90,
	94, 186, 140, 173, 179, 134, 131, 89, 177, 132,
	130, 122, 109, 116, 150, 129, 151, 117, 137, 136,
	138, 0, 0, 0, 167, 184, 202, 96, 0, 163,
	172, 191, 192, 193, 194, 195, 196, 0, 0, 97,
	112, 108, 149, 139, 95, 118, 164, 121, 128, 155,
	200, 145, 160, 100, 183, 165, 0, 25, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 198, 105, 101, 83, 84, 91, 125, 199, 154,
	110, 185, 107, 0, 0, 0, 0, 0, 124, 0,
	126, 0, 0, 166, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 147, 0,
	218, 143, 182, 0, 0, 0, 219, 0, 0, 0,
	0, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 0, 0, 0, 102, 0, 159, 146,
	181, 0, 148, 158, 127, 174, 153, 0, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	0, 0, 167, 184, 202, 96, 0, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 0, 25, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 198,
	105, 101, 83, 84, 91, 125, 199, 154, 110, 185,
	107, 0, 0, 0, 0, 0, 124, 0, 126, 0,
	0, 166, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 147, 0, 218, 143,
	182, 0, 0, 0, 219, 0, 0, 0, 0, 152,
	0, 169, 115, 123, 85, 92, 0, 114, 141, 157,
	161, 0, 0, 0, 102, 0, 159, 146, 181, 0,
	148, 158, 127, 174, 153, 0, 189, 190, 171, 188,
	197, 86, 170, 180, 99, 162, 88, 178, 168, 133,
	119, 120, 87, 0, 156, 106, 111, 104, 142, 175,
	176, 103, 201, 93, 187, 90, 94, 186, 140, 173,
	179, 134, 131, 89, 177, 132, 130, 122, 109, 116,
	150, 129, 151, 117, 137, 136, 138, 0, 0, 0,
	167, 184, 202, 96, 0, 163, 172, 191, 192, 193,
	194, 195, 196, 0, 0, 97, 112, 108, 149, 139,
	95, 118, 164, 121, 128, 155, 200, 145, 160, 100,
	183, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 91, 125, 199, 154, 110, 185, 144, 0,
	198, 105, 101, 83, 0, 0, 868, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 124, 0, 126,
	0, 0, 166, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 870, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 147, 0, 218,
	143, 182, 0, 0, 0, 219, 0, 0, 0, 0,
	152, 0, 169, 115, 123, 85, 92, 0, 114, 141,
	157, 161, 0, 0, 0, 102, 0, 159, 146, 181,
	0, 866, 158, 127, 174, 153, 0, 189, 190, 171,
	188, 197, 86, 170, 180, 99, 162, 88, 178, 168,
	133, 119, 120, 87, 0, 156, 106, 111, 104, 142,
	175, 176, 103, 201, 93, 187, 90, 94, 186, 140,
	173, 179, 134, 131, 89, 177, 132, 130, 122, 109,
	116, 150, 129, 151, 117, 137, 136, 138, 0, 0,
	0, 167, 184, 202, 96, 0, 163, 172, 191, 192,
	193, 194, 195, 196, 0, 0, 97, 112, 108, 149,
	139, 95, 118, 164, 121, 128, 155, 200, 145, 160,
	100, 183, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 198, 105,
	101, 83, 84, 91, 125, 199, 154, 110, 185, 107,
	0, 0, 0, 0, 0, 124, 0, 126, 0, 0,
	166, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 762, 0, 0, 763, 0, 0, 98, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 147, 0, 218, 143, 182,
	0, 0, 0, 219, 0, 0, 0, 0, 152, 0,
	169, 115, 123, 85, 92, 0, 114, 141, 157, 161,
	0, 0, 0, 102, 0, 159, 146, 181, 0, 148,
	158, 127, 174, 153, 0, 189, 190, 171, 188, 197,
	86, 170, 180, 99, 162, 88, 178, 168, 133, 119,
	120, 87, 0, 156, 106, 111, 104, 142, 175, 176,
	103, 201, 93, 187, 90, 94, 186, 140, 173, 179,
	134, 131, 89, 177, 132, 130, 122, 109, 116, 150,
	129, 151, 117, 137, 136, 138, 0, 0, 0, 167,
	184, 202, 96, 0, 163, 172, 191, 192, 193, 194,
	195, 196, 0, 0, 97, 112, 108, 149, 139, 95,
	118, 164, 121, 128, 155, 200, 145, 160, 100, 183,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 198, 105, 101, 83,
	84, 91, 125, 199, 154, 110, 185, 107, 0, 652,
	0, 0, 0, 124, 0, 126, 0, 0, 166, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 651,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 147, 0, 218, 143, 182, 0, 0,
	0, 219, 0, 0, 0, 0, 152, 0, 169, 115,
	123, 85, 92, 0, 114, 141, 157, 161, 0, 0,
	0, 102, 0, 159, 146, 181, 0, 148, 158, 127,
	174, 153, 0, 189, 190, 171, 188, 197, 86, 170,
	180, 99, 162, 88, 178, 168, 133, 119, 120, 87,
	0, 156, 106, 111, 104, 142, 175, 176, 103, 201,
	93, 187, 90, 94, 186, 140, 173, 179, 134, 131,
	89, 177, 132, 130, 122, 109, 116, 150, 129, 151,
	117, 137, 136, 138, 0, 0, 0, 167, 184, 202,
	96, 0, 163, 172, 191, 192, 193, 194, 195, 196,
	0, 0, 97, 112, 108, 149, 139, 95, 118, 164,
	121, 128, 155, 200, 145, 160, 100, 183, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 198, 105, 101, 83, 84, 91,
	125, 199, 154, 110, 185, 107, 0, 0, 0, 0,
	0, 124, 0, 126, 0, 0, 166, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 147, 0, 218, 143, 182, 0, 0, 0, 219,
	0, 0, 0, 0, 152, 0, 169, 115, 123, 85,
	92, 0, 114, 141, 157, 161, 0, 0, 0, 102,
	0, 159, 146, 181, 0, 148, 158, 127, 174, 153,
	0, 189, 190, 171, 188, 197, 86, 170, 180, 99,
	162, 88, 178, 168, 133, 119, 120, 87, 0, 156,
	106, 111, 104, 142, 175, 176, 103, 201, 93, 187,
	90, 94, 186, 140, 173, 179, 134, 131, 89, 177,
	132, 130, 122, 109, 116, 150, 129, 151, 117, 137,
	136, 138, 0, 0, 0, 167, 184, 202, 96, 0,
	163, 172, 191, 192, 193, 194, 195, 196, 0, 0,
	97, 112, 108, 149, 139, 95, 118, 164, 121, 128,
	155, 200, 145, 160, 100, 183, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 198, 105, 101, 83, 84, 91, 125, 199,
	154, 110, 185, 107, 0, 0, 0, 0, 0, 124,
	0, 126, 0, 0, 166, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 870, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 147,
	0, 218, 143, 182, 0, 0, 0, 219, 0, 0,
	0, 0, 152, 0, 169, 115, 123, 85, 92, 0,
	114, 141, 157, 161, 0, 0, 0, 102, 0, 159,
	146, 181, 0, 148, 158, 127, 174, 153, 0, 189,
	190, 171, 188, 197, 86, 170, 180, 99, 162, 88,
	178, 168, 133, 119, 120, 87, 0, 156, 106, 111,
	104, 142, 175, 176, 103, 201, 93, 187, 90, 94,
	186, 140, 173, 179, 134, 131, 89, 177, 132, 130,
	122, 109, 116, 150, 129, 151, 117, 137, 136, 138,
	0, 0, 0, 167, 184, 202, 96, 0, 163, 172,
	191, 192, 193, 194, 195, 196, 0, 0, 97, 112,
	108, 149, 139, 95, 118, 164, 121, 128, 155, 200,
	145, 160, 100, 183, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	198, 105, 101, 83, 84, 91, 125, 199, 154, 110,
	185, 107, 0, 0, 0, 0, 0, 124, 0, 126,
	0, 0, 166, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 539, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 147, 0, 218,
	143, 182, 0, 0, 0, 219, 0, 0, 0, 0,
	152, 0, 169, 115, 123, 85, 92, 0, 114, 141,
	157, 161, 0, 0, 0, 102, 0, 159, 146, 181,
	0, 148, 158, 127, 174, 153, 0, 189, 190, 171,
	188, 197, 86, 170, 180, 99, 162, 88, 178, 168,
	133, 119, 120, 87, 0, 156, 106, 111, 104, 142,
	175, 176, 103, 201, 93, 187, 90, 94, 186, 140,
	173, 179, 134, 131, 89, 177, 132, 130, 122, 109,
	116, 150, 129, 151, 117, 137, 136, 138, 0, 0,
	0, 167, 184, 202, 96, 0, 163, 172, 191, 192,
	193, 194, 195, 196, 0, 0, 97, 112, 108, 149,
	139, 95, 118, 164, 121, 128, 155, 200, 145, 160,
	100, 183, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 91, 125, 199, 154, 110, 185, 144,
	0, 198, 105, 101, 83, 0, 0, 0, 0, 0,
	0, 621, 107, 0, 0, 0, 0, 0, 124, 0,
	126, 0, 0, 166, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 147, 0,
	218, 143, 182, 0, 0, 0, 219, 0, 0, 0,
	0, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 0, 0, 0, 102, 0, 159, 146,
	181, 0, 148, 158, 127, 174, 153, 0, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	0, 0, 167, 184, 202, 96, 0, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 144, 0, 198,
	105, 101, 83, 84, 91, 125, 199, 154, 110, 185,
	107, 0, 0, 0, 0, 0, 124, 0, 126, 0,
	0, 166, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 147, 0, 218, 143,
	182, 0, 0, 0, 219, 0, 0, 0, 0, 152,
	0, 169, 115, 123, 85, 92, 0, 114, 141, 157,
	161, 0, 0, 0, 102, 0, 159, 146, 181, 0,
	148, 158, 127, 174, 153, 0, 189, 190, 171, 188,
	197, 86, 170, 180, 99, 162, 88, 178, 168, 133,
	119, 120, 87, 0, 156, 106, 111, 104, 142, 175,
	176, 103, 201, 93, 187, 90, 94, 186, 140, 173,
	179, 134, 131, 89, 177, 132, 130, 122, 109, 116,
	150, 129, 151, 117, 137, 136, 138, 0, 0, 0,
	167, 184, 202, 96, 0, 163, 172, 191, 192, 193,
	194, 195, 196, 0, 0, 97, 112, 108, 149, 139,
	95, 118, 164, 121, 128, 155, 200, 145, 160, 100,
	183, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 198, 105, 101,
	83, 84, 91, 125, 199, 154, 110, 185, 107, 0,
	0, 0, 0, 0, 124, 0, 126, 0, 0, 166,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 147, 0, 218, 143, 182, 213,
	0, 0, 219, 0, 0, 0, 0, 152, 0, 169,
	115, 123, 85, 92, 0, 114, 141, 157, 161, 0,
	0, 0, 102, 0, 159, 146, 181, 0, 148, 158,
	127, 174, 153, 0, 189, 190, 171, 188, 197, 86,
	170, 180, 99, 162, 88, 178, 168, 133, 119, 120,
	87, 0, 156, 106, 111, 104, 142, 175, 176, 103,
	201, 93, 187, 90, 94, 186, 140, 173, 179, 134,
	131, 89, 177, 132, 130, 122, 109, 116, 150, 129,
	151, 117, 137, 136, 138, 0, 0, 0, 167, 184,
	202, 96, 0, 163, 172, 191, 192, 193, 194, 195,
	196, 0, 0, 97, 112, 108, 149, 139, 95, 118,
	164, 121, 128, 155, 200, 145, 160, 100, 183, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 198, 105, 101, 83, 84,
	91, 125, 199, 154, 110, 185, 107, 0, 0, 0,
	0, 0, 124, 0, 126, 0, 0, 166, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 147, 0, 218, 143, 182, 0, 0, 0,
	219, 0, 0, 0, 0, 152, 0, 169, 115, 123,
	85, 92, 0, 114, 141, 157, 161, 0, 0, 0,
	102, 0, 159, 146, 181, 0, 148, 158, 127, 174,
	153, 0, 189, 190, 171, 188, 197, 86, 170, 180,
	99, 162, 88, 178, 168, 133, 119, 120, 87, 0,
	156, 106, 111, 104, 142, 175, 176, 103, 201, 93,
	187, 90, 94, 186, 140, 173, 179, 134, 131, 89,
	177, 132, 130, 122, 109, 116, 150, 129, 151, 117,
	137, 136, 138, 0, 0, 0, 167, 184, 202, 96,
	0, 163, 172, 191, 192, 193, 194, 195, 196, 0,
	0, 97, 112, 108, 149, 139, 95, 118, 164, 121,
	128, 155, 200, 145, 160, 100, 183, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 198, 105, 101, 83, 84, 91, 125,
	199, 154, 110, 185, 107, 0, 0, 0, 0, 0,
	124, 0, 126, 0, 0, 166, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	147, 0, 218, 143, 182, 0, 0, 0, 219, 0,
	0, 0, 0, 152, 0, 169, 115, 123, 85, 92,
	0, 114, 141, 157, 161, 0, 0, 0, 102, 0,
	159, 146, 181, 0, 148, 158, 127, 174, 153, 0,
	189, 190, 171, 188, 197, 86, 170, 180, 99, 162,
	88, 178, 168, 133, 119, 120, 87, 0, 156, 106,
	111, 104, 142, 175, 176, 103, 201, 93, 187, 90,
	94, 186, 140, 173, 179, 134, 131, 89, 177, 132,
	130, 122, 109, 116, 150, 129, 151, 117, 137, 136,
	138, 0, 0, 0, 167, 184, 202, 96, 0, 163,
	172, 191, 192, 193, 194, 195, 196, 0, 0, 97,
	112, 108, 149, 139, 95, 118, 164, 121, 128, 155,
	200, 145, 160, 100, 183, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 198, 105, 101, 83, 84, 91, 125, 199, 154,
	110, 185, 107, 0, 0, 0, 0, 0, 124, 0,
	126, 0, 0, 166, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 147, 0,
	218, 143, 182, 0, 0, 0, 219, 0, 0, 0,
	0, 152, 0, 169, 115, 123, 85, 92, 0, 114,
	141, 157, 161, 0, 0, 0, 102, 0, 159, 146,
	181, 0, 148, 158, 127, 174, 153, 0, 189, 190,
	171, 188, 197, 86, 170, 180, 99, 162, 88, 178,
	168, 133, 119, 120, 87, 0, 156, 106, 111, 104,
	142, 175, 176, 103, 201, 93, 187, 90, 94, 186,
	140, 173, 179, 134, 131, 89, 177, 132, 130, 122,
	109, 116, 150, 129, 151, 117, 137, 136, 138, 0,
	0, 0, 167, 184, 202, 96, 0, 163, 172, 191,
	192, 193, 194, 195, 196, 0, 0, 97, 112, 108,
	149, 139, 95, 118, 164, 121, 128, 155, 200, 145,
	160, 100, 183, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 91, 125, 199, 154, 110, 185,
}
var yyPact = [...]int{

	1431, -1000, -1000, -192, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 937, 987, -1000, -1000, -1000, -1000, -1000,
	-1000, 275, 9962, 7, 110, 11, 12977, 109, 1396, 13473,
	-1000, -16, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -86,
	-121, -1000, 695, -1000, -1000, -1000, 1431, 924, 935, 746,
	913, 812, -1000, 7364, 79, 79, 12729, 6059, -1000, -1000,
	311, 13473, 99, 13473, 13473, -162, 77, 77, 77, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 105, 13473, 210, -1000, 13473, 72, 549,
	72, 72, 72, 13473, -1000, 179, -1000, -1000, -1000, -1000,
	13473, 541, 842, 3593, 74, 3593, 3593, -1000, 3593, 3593,
	-1000, 3593, -8, 3593, -87, 951, -1000, -1000, -1000, -1000,
	-35, -1000, 3593, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 540, -1000, 897, 8409,
	8409, 937, -1000, 695, -1000, -1000, -1000, 875, -1000, -1000,
	401, 961, -1000, 9714, 165, -1000, 8409, 1863, 715, -1000,
	-1000, 715, -1000, -1000, 134, -1000, -1000, 9192, 9192, 9192,
	9192, 9192, 9192, 9192, 9192, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 715,
	-1000, 8148, 715, 715, 715, 715, 715, 715, 715, 715,
	8409, 715, 715, 715, 715, 715, 715, 715, 715, 715,
	715, 715, 715, 715, 715, 715, 12481, 11724, 13473, 682,
	671, -1000, -1000, 164, 707, 5785, -115, -1000, -1000, -1000,
	331, 11476, -1000, -1000, -1000, 841, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 621, 13473, -1000, 2156, -1000, 526, 3593,
	115, 88, 511, 345, 509, 13473, 13473, 3593, 3, 31,
	103, 13473, 712, 82, 13473, 895, 779, 13473, 492, 488,
	-1000, 5511, -1000, 3593, 3593, -1000, -1000, -1000, 3593, 3593,
	3593, 13473, 3593, 3593, -1000, -1000, -1000, -1000, -1000, 3593,
	3593, -1000, 958, 333, -1000, -1000, -1000, -1000, 8409, -1000,
	777, -1000, -1000, -1000, -1000, -1000, -1000, 980, 226, 410,
	162, 711, -1000, 535, 924, 540, 812, 11228, 783, -1000,
	-1000, 13473, -1000, 8409, 8409, 501, -1000, 12220, -1000, -1000,
	4415, 241, 9192, 396, 346, 9192, 9192, 9192, 9192, 9192,
	9192, 9192, 9192, 9192, 9192, 9192, 9192, 9192, 9192, 9192,
	420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 470,
	-1000, 695, 587, 587, 185, 185, 185, 185, 185, 185,
	185, 9453, 6842, 540, 618, 265, 8148, 7364, 7364, 8409,
	8409, 7886, 7625, 7364, 898, 338, 265, 13721, -1000, -1000,
	8931, -1000, -1000, -1000, -1000, -1000, 540, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13225, 13225, 7364, 7364, 7364, 7364,
	36, 13473, -1000, 650, 929, -1000, -1000, -1000, 901, 10719,
	715, 10980, 36, 572, 11724, 13473, -1000, -1000, 11724, 13473,
	4141, 5237, 707, -115, 696, -1000, -113, -136, 6581, 172,
	-1000, -1000, -1000, -1000, 3319, 444, 561, 381, -70, -1000,
	-1000, -1000, 727, -1000, 727, 727, 727, 727, -43, -43,
	-43, -43, -1000, -1000, -1000, -1000, -1000, 748, 747, -1000,
	727, 727, 727, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 742, 742, 742, 729, 729, 738, -1000, 113, 13473,
	3593, 894, 3593, -1000, 239, -1000, 13225, 13225, 13473, 13473,
	124, 13473, 13473, 705, -1000, 13473, 3593, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13473, 339, 13473, 13473, 265, 13473, -1000, 821,
	8409, 8409, 4963, 8409, -1000, -1000, -1000, 897, -1000, 898,
	928, -1000, 832, 830, 7364, -1000, -1000, 241, 254, -1000,
	-1000, 389, -1000, -1000, -1000, -1000, 161, 715, -1000, 2290,
	-1000, -1000, -1000, -1000, 396, 9192, 9192, 9192, 1611, 2290,
	2360, 155, 1633, 185, 435, 435, 203, 203, 203, 203,
	203, 406, 406, -1000, -1000, -1000, 540, -1000, -1000, -1000,
	540, 7364, 702, -1000, -1000, 8409, -1000, 540, 605, 605,
	380, 500, 288, 957, 605, 236, 956, 605, 605, 7364,
	366, -1000, 8409, 540, -1000, 160, -1000, 1706, 699, 697,
	605, 540, 605, 605, 628, 715, -1000, 13721, 11724, 11724,
	11724, 11724, 11724, -1000, 809, 808, -1000, 792, 791, 799,
	13473, -1000, 616, 10719, 13225, 149, 715, -1000, 11972, -1000,
	-1000, 950, 11724, 683, -1000, 683, -1000, 159, -1000, -1000,
	696, -115, -139, -1000, -1000, -1000, -1000, 265, -1000, 436,
	665, 3045, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 741,
	466, -1000, 869, 193, 190, 464, 867, -1000, -1000, -1000,
	844, -1000, 362, -72, -1000, -1000, 432, -43, -43, -1000,
	-1000, 172, 838, 172, 172, 172, 461, 461, -1000, -1000,
	-1000, -1000, 431, -1000, -1000, -1000, 424, -1000, 775, 13225,
	9192, 3593, -1000, -1000, -1000, -1000, 304, 304, 187, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35, 630, -1000, -1000, -1000, -1, -3, 75, -1000, 3593,
	-1000, 333, -1000, 460, 8409, -1000, -1000, -1000, 819, 265,
	265, 153, -1000, -1000, 13473, -1000, -1000, -1000, -1000, 691,
	-1000, -1000, -1000, 3867, 7364, -1000, 1611, 2290, 2191, -1000,
	9192, 9192, -1000, -1000, 605, 7364, 265, -1000, -1000, -1000,
	81, 420, 81, 9192, 9192, -1000, 9192, 9192, -1000, -174,
	688, 274, -1000, 8409, 273, -1000, 4963, -1000, 9192, 9192,
	-1000, -1000, -1000, -1000, 772, 13721, 715, -1000, 10471, 13225,
	685, -1000, 312, 929, 737, 769, 834, -1000, -1000, -1000,
	-1000, 800, -1000, 794, -1000, -1000, -1000, -1000, 540, 657,
	-1000, 211, -1000, 97, 94, 83, 13225, -1000, 937, 8409,
	683, -1000, -1000, 202, -1000, -1000, -145, -134, -1000, -1000,
	-1000, 3319, -1000, 3319, 13225, 52, -1000, 464, 464, -1000,
	-1000, -1000, 734, 758, 9192, -1000, -1000, -1000, 559, 172,
	172, -1000, 244, -1000, -1000, -1000, 601, -1000, 597, 655,
	584, 13473, -1000, 1690, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13473,
	-1000, -1000, -1000, -1000, -1000, 13225, -180, 446, 13225, 13225,
	13473, -1000, 339, -1000, 265, -1000, 4689, -1000, 950, 11724,
	-1000, -1000, 540, -1000, 9192, 2290, 2290, -1000, -1000, 540,
	727, 727, -1000, 727, 729, -1000, 727, -25, 727, -27,
	540, 540, 2136, 2104, 2035, 1971, 715, -169, -1000, 265,
	8409, -1000, 1822, 1768, -1000, 872, 614, 635, -1000, -1000,
	7103, 540, 578, 151, 567, -1000, 937, 13721, 8409, -1000,
	-1000, 8409, 728, -1000, 8409, -1000, -1000, -1000, 901, 13225,
	6320, 715, 715, 715, 567, 924, 265, -1000, -1000, -1000,
	-1000, 3045, -1000, 564, -1000, 727, -1000, -1000, -1000, 13225,
	-66, 979, 2290, -1000, -1000, -1000, -1000, -1000, -43, 459,
	-43, 416, -1000, 415, 3593, -1000, 726, -1000, -1000, -1000,
	-1000, 879, -1000, 4689, -1000, -1000, 721, -1000, -1000, -1000,
	941, 648, -1000, 2290, -1000, -1000, 95, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9192, 9192, 9192, 9192, 9192,
	540, 457, 265, 9192, 9192, 866, -1000, 715, -1000, -1000,
	693, 13225, 13225, -1000, 13225, 924, -1000, 265, 265, 13225,
	265, 13473, -1000, -1000, 265, 715, 715, 13225, 13225, 13225,
	10223, -1000, 150, 13225, -1000, 558, -1000, 180, -1000, -133,
	172, -1000, 172, 553, 548, -1000, 13473, 715, 639, -1000,
	282, 13225, 939, 927, -1000, -1000, 1706, 1706, 1706, 1706,
	73, -1000, -1000, 1706, 1706, 974, -1000, 715, -1000, 695,
	133, -1000, -1000, -1000, 547, -1000, 11724, 13721, 539, 539,
	539, 149, 150, -1000, 437, 277, 456, -1000, 49, 13225,
	379, 857, -1000, 846, -1000, -1000, -1000, -1000, -1000, 537,
	267, 131, 34, 4689, 3319, 521, 17, 8409, 8409, -1000,
	-1000, -1000, -1000, 540, 44, -184, -1000, -1000, 13721, 635,
	540, 13225, -1000, 774, 540, -1000, -1000, -1000, -1000, -1000,
	-1000, 413, -1000, -1000, 13473, -1000, -1000, 441, -1000, -1000,
	13473, -1000, 9192, 13473, 497, -1000, 13225, -1000, -1000, 630,
	-1000, 755, 265, 631, -1000, 817, -178, -188, 629, -1000,
	-1000, -1000, -1000, -1000, 717, -1000, 243, 2290, -1000, -1000,
	34, 829, -180, 626, -1000, 915, 908, 8409, -1000, 815,
	-1000, 13225, 9192, -1000, 30, -1000, 755, -1000, 8409, 265,
	-181, 475, 2290, 20, -1000, 265, -186, 752, 715, -189,
	698, -1000, 955, 8670, -1000, -1000, 964, 167, 167, 1706,
	540, -1000, -1000, -1000, 57, 402, -1000, -1000, -1000, -1000,
	-1000, -1000,
}
var yyPgo = [...]int{

	0, 809, 1195, 81, 645, 1193, 1192, 1191, 1190, 1186,
	1184, 1183, 1181, 1180, 1178, 1176, 1174, 1171, 1170, 1169,
	1168, 1167, 1166, 1165, 1164, 1162, 1160, 159, 1159, 1158,
	1157, 77, 1156, 78, 1155, 1154, 46, 367, 51, 45,
	1447, 1153, 32, 22, 80, 1152, 1151, 1146, 19, 1145,
	39, 1144, 1143, 83, 1142, 1138, 58, 1137, 1135, 93,
	1134, 66, 1133, 14, 28, 1129, 1128, 1123, 1122, 73,
	1102, 1119, 1118, 15, 1117, 1114, 91, 1113, 59, 10,
	13, 25, 30, 1110, 44, 11, 1109, 57, 1108, 1107,
	1105, 1104, 21, 1101, 63, 1097, 42, 60, 1096, 1095,
	4, 1094, 7, 71, 36, 20, 9, 85, 64, 1093,
	26, 70, 54, 1092, 1091, 471, 1089, 1088, 47, 1087,
	1083, 29, 191, 516, 1081, 1080, 1079, 1077, 48, 0,
	533, 79, 76, 1072, 1070, 1068, 1690, 49, 55, 18,
	23, 56, 506, 43, 1066, 1065, 41, 1064, 1063, 1060,
	1059, 1058, 1057, 1056, 115, 1053, 1052, 1050, 119, 24,
	1049, 1048, 65, 31, 1044, 1041, 1036, 52, 69, 1035,
	1032, 53, 38, 1030, 1029, 1028, 1025, 1021, 34, 27,
	1020, 17, 1016, 12, 1015, 35, 1014, 5, 1013, 16,
	1012, 2, 1011, 6, 50, 1, 1010, 3, 1009, 1008,
	8, 1005, 61, 663, 86, 1004, 84,
}
var yyR1 = [...]int{

	0, 201, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 7, 4, 5,
	5, 6, 6, 8, 8, 30, 30, 9, 10, 10,
	10, 10, 204, 204, 53, 53, 54, 54, 103, 103,
	11, 11, 11, 11, 108, 108, 112, 112, 112, 113,
	113, 113, 113, 144, 144, 12, 12, 12, 12, 12,
	12, 12, 12, 200, 200, 199, 199, 198, 198, 193,
	193, 192, 191, 191, 190, 190, 189, 18, 174, 176,
	176, 175, 175, 175, 175, 168, 147, 147, 147, 147,
	150, 150, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 149, 149, 149, 149, 149, 151, 151, 151, 151,
	151, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 153, 153, 153, 153,
	153, 153, 153, 153, 167, 167, 154, 154, 162, 162,
	163, 163, 163, 160, 160, 161, 161, 164, 164, 164,
	156, 156, 157, 157, 165, 165, 158, 158, 158, 159,
	159, 159, 166, 166, 166, 166, 166, 155, 155, 169,
	169, 184, 184, 183, 183, 183, 173, 173, 180, 180,
	180, 180, 180, 171, 171, 172, 172, 182, 182, 181,
	170, 170, 185, 185, 185, 185, 196, 197, 195, 195,
	195, 195, 195, 177, 177, 177, 178, 178, 178, 179,
	179, 179, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 188, 186, 186, 187,
	187, 14, 19, 19, 15, 15, 15, 15, 15, 16,
	16, 20, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 119, 119, 117, 117, 120, 120,
	118, 118, 118, 121, 121, 121, 145, 145, 145, 22,
	22, 24, 24, 25, 26, 23, 23, 23, 23, 23,
	23, 23, 17, 205, 27, 28, 28, 29, 29, 29,
	33, 33, 33, 31, 31, 32, 32, 38, 38, 37,
	37, 39, 39, 39, 39, 133, 133, 133, 132, 132,
	41, 41, 42, 42, 43, 43, 44, 44, 44, 44,
	44, 62, 62, 47, 47, 46, 46, 48, 49, 49,
	49, 102, 102, 104, 104, 45, 45, 45, 45, 50,
	50, 51, 51, 52, 52, 140, 140, 139, 139, 139,
	138, 138, 55, 55, 55, 57, 56, 56, 56, 56,
	58, 58, 60, 60, 59, 59, 61, 63, 63, 63,
	63, 64, 64, 40, 40, 40, 40, 40, 40, 40,
	116, 116, 66, 66, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 77, 77, 77, 77, 77, 77,
	67, 67, 67, 67, 67, 67, 67, 36, 36, 78,
	78, 78, 84, 79, 79, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 74, 74, 74,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 206,
	206, 76, 75, 75, 75, 75, 75, 75, 34, 34,
	34, 34, 34, 143, 143, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 88, 88,
	35, 35, 86, 86, 87, 89, 89, 85, 85, 85,
	69, 69, 69, 69, 69, 69, 69, 69, 71, 71,
	71, 90, 90, 91, 91, 92, 92, 93, 93, 94,
	95, 95, 95, 96, 96, 96, 96, 97, 97, 97,
	98, 98, 99, 99, 100, 100, 100, 68, 68, 68,
	68, 68, 68, 101, 101, 101, 101, 105, 105, 80,
	80, 82, 82, 81, 83, 106, 106, 110, 107, 107,
	111, 111, 111, 111, 109, 109, 109, 135, 135, 135,
	114, 114, 122, 122, 123, 123, 115, 115, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 125,
	125, 126, 126, 127, 127, 127, 134, 134, 130, 130,
	131, 131, 136, 136, 137, 137, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 202, 203, 141, 142, 142, 142,
}
var yyR2 = [...]int{

	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 11, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 8, 4, 7,
	6, 5, 5, 1, 3, 3, 5, 0, 4, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 4, 2,
	4, 1, 3, 3, 3, 8, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 1, 2,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	2, 2, 0, 2, 1, 2, 1, 0, 2, 5,
	4, 1, 2, 2, 3, 2, 0, 1, 2, 3,
	3, 2, 2, 1, 1, 0, 1, 1, 3, 2,
	3, 1, 10, 11, 11, 12, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 6, 7, 7, 7, 7, 4, 5, 7,
	5, 5, 5, 12, 7, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 3, 8,
	8, 3, 3, 5, 4, 6, 5, 4, 4, 3,
	2, 3, 4, 4, 3, 4, 4, 4, 4, 4,
	4, 3, 3, 2, 3, 3, 2, 3, 4, 3,
	7, 5, 4, 2, 4, 2, 2, 2, 2, 3,
	3, 5, 2, 3, 1, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 1, 1, 2,
	1, 1, 2, 1, 1, 2, 2, 2, 2, 2,
	3, 3, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 0, 1, 0, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 3, 1, 3,
	6, 3, 7, 0, 1, 1, 3, 3, 1, 4,
	4, 1, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 6,
	4, 4, 6, 6, 6, 8, 8, 8, 8, 9,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 4,
	0, 2, 1, 3, 2, 3, 2, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -201, -1, -2, -3, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -16, -20, -21, -22, -24, -25,
	-26, -23, -17, -4, -5, 6, 7, -30, 9, 10,
	34, -18, 120, 121, 123, 122, 159, 124, 152, 54,
	172, 173, 175, 176, 29, 153, 154, 157, 158, 35,
	36, 126, -202, 8, 262, 58, 279, -92, 15, -29,
	5, -27, -205, -27, -27, -27, -27, -27, -174, -176,
	58, 94, -127, 135, 129, 76, 254, 128, 132, 139,
	-130, 61, -129, 23, 272, 145, 172, 183, 177, 204,
	196, 273, 146, 194, 197, 241, 224, 236, 70, 175,
	250, 22, 155, 192, 188, 21, 186, 31, 238, 209,
	277, 187, 237, 126, 148, 143, 210, 214, 242, 181,
	182, 244, 208, 144, 37, 274, 39, 163, 245, 212,
	207, 203, 206, 180, 202, 43, 216, 215, 217, 240,
	199, 149, 189, 130, 18, 248, 158, 127, 161, 239,
	211, 213, 140, 165, 276, 246, 185, 150, 162, 157,
	249, 151, 176, 226, 243, 252, 42, 221, 179, 142,
	173, 169, 227, 200, 164, 190, 191, 205, 178, 201,
	174, 159, 131, 251, 222, 278, 198, 195, 170, 167,
	168, 228, 229, 230, 231, 232, 233, 171, 20, 275,
	247, 193, 223, -115, 135, 231, 137, 132, 132, 134,
	135, 254, 128, 132, -59, -136, 61, -129, 129, 135,
	132, 113, 197, 241, 120, 225, 226, 238, 134, 37,
	239, 165, -145, 132, -117, 224, 228, 229, 230, 233,
	231, 171, 61, 243, 242, 234, -136, 174, -141, -141,
	-141, -141, -141, 227, 227, -141, -3, -1, -96, 17,
	16, -6, -4, -202, 6, 24, 25, -33, 44, 45,
	-28, -39, 104, -40, -136, -65, 78, -70, 33, 61,
	-129, 27, -69, -66, -85, -83, -84, 113, 114, 115,
	102, 103, 110, 79, 116, -74, -72, -73, -75, 63,
	62, 71, 64, 65, 66, 67, 72, 73, 74, -130,
	-81, -202, 48, 49, 263, 264, 265, 266, 271, 267,
	81, 38, 253, 261, 260, 259, 257, 258, 255, 256,
	269, 270, 138, 254, 108, 262, -115, -115, 11, -53,
	-54, -59, -61, -136, -107, -144, 174, -111, 243, 242,
	-131, -109, -130, -128, 241, 197, 240, 125, 77, 26,
	28, 219, 80, 113, 16, 81, 112, 263, 120, 52,
	255, 256, 253, 265, 266, 254, 225, 33, 10, 29,
	153, 25, 106, 122, 84, 85, 156, 27, 154, 74,
	19, 55, 11, 13, 14, 138, 137, 96, 134, 50,
	8, 116, 30, 93, 46, 32, 48, 94, 17, 257,
	258, 35, 271, 160, 108, 53, 40, 78, 72, 75,
	56, 76, 15, 51, 95, 123, 262, 49, 128, 6,
	268, 34, 152, 47, 132, 83, 269, 270, 136, 166,
	73, 5, 139, 36, 9, 54, 57, 259, 260, 261,
	38, 82, 12, -175, 94, -168, 61, -59, 134, -59,
	-59, 262, -123, 138, -123, -123, 132, -59, 120, 122,
	125, 56, -19, -59, -122, 138, 61, -122, -122, -122,
	-59, 117, -59, 61, 34, -142, -202, -131, 254, 61,
	165, 132, 166, 135, -142, -142, -142, -142, -142, 169,
	170, -142, -120, -119, 236, 237, 227, 235, 12, 227,
	168, -142, -141, -141, -203, 60, -97, 19, 35, -40,
	-136, -93, -94, -40, -92, -3, -27, 40, -31, 25,
	69, 11, -133, 77, 76, 93, -132, 26, -130, 63,
	117, -40, -67, 96, 78, 94, 95, 80, 99, 98,
	109, 102, 103, 104, 105, 106, 107, 108, 100, 101,
	112, 86, 87, 88, 89, 90, 91, 92, -116, -202,
	-84, -202, 118, 119, -70, -70, -70, -70, -70, -70,
	-70, -70, -202, -3, -79, -40, -202, -202, -202, -202,
	-202, -202, -202, -202, -202, -88, -40, -202, -206, -76,
	-202, -206, -76, -206, -76, -206, -202, -206, -76, -206,
	-76, -206, -206, -76, -202, -202, -202, -202, -202, -202,
	-60, 30, -59, -42, -43, -44, -45, -62, -84, -202,
	61, -59, -59, -53, -204, 59, 11, 57, -204, 59,
	117, 59, -107, 174, -108, -112, 244, 246, 86, -135,
	-130, 63, 33, 34, 60, 59, -59, -147, -150, -152,
	-151, -153, -148, -149, 194, 195, 113, 198, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 34, 155,
	190, 191, 192, 193, 210, 211, 212, 213, 214, 215,
	216, 217, 177, 196, 273, 178, 179, 180, 181, 182,
	183, 185, 186, 187, 188, 189, 61, -142, 130, 135,
	61, 78, 61, -59, -59, -142, 167, 167, 132, 132,
	-59, 59, 136, -53, 27, 56, -59, 61, 61, -137,
	-136, -128, -142, -142, -142, -142, -142, -59, -142, -142,
	-142, -142, 11, -118, 11, 96, -40, 56, 9, 96,
	59, 18, 117, 59, -95, 28, 29, -96, -203, -33,
	-71, -130, 64, 67, -32, 47, -59, -40, -40, -77,
	72, 78, 73, 74, -132, 104, -137, -131, -128, -70,
	-78, -81, -84, 68, 96, 94, 95, 80, -70, -70,
	-70, -70, -70, -70, -70, -70, -70, -70, -70, -70,
	-70, -70, -70, -143, 61, 63, 61, -69, -69, -130,
	-38, 25, -37, -39, -203, 59, -203, -3, -37, -37,
	-40, -40, -85, 63, -37, -85, 63, -37, -37, -31,
	-86, -87, 82, -85, -130, -136, -203, -70, -130, -130,
	-37, -38, -37, -37, -103, 161, -59, 34, 59, -55,
	-57, -56, -58, 46, 50, 52, 47, 48, 49, 53,
	-140, 26, -42, -202, -202, -139, 161, -138, 26, -136,
	63, -103, 57, -42, -59, -42, -61, -136, 104, -111,
	-108, 59, 245, 247, 248, 56, 75, -40, -159, 112,
	-177, -178, -179, -131, 63, 64, -168, -169, -170, -180,
	147, -185, 140, 142, 139, -171, 148, 134, 32, 60,
	-164, 72, 78, -160, 222, -154, 58, -154, -154, -154,
	-154, -158, 197, -158, -158, -158, 58, 58, -154, -154,
	-154, -162, 58, -162, -162, -163, 58, -163, -134, 57,
	131, -59, -142, 27, -142, -124, 125, 122, 123, -188,
	121, 219, 197, 70, 33, 15, 263, 161, 278, 61,
	162, -130, -130, -59, -59, 125, 122, -59, -59, -59,
	-142, -59, -121, 94, 12, -136, -136, -59, 42, -40,
	-40, -137, -94, -97, -114, 19, 11, 38, 38, -37,
	72, 73, 74, 117, -202, -78, -70, -70, -70, -36,
	156, 77, -203, -203, -37, 59, -40, -203, -203, -203,
	59, 57, 26, 11, 11, -203, 11, 11, -203, -203,
	-37, -89, -87, 84, -40, -203, 117, -203, 59, 59,
	-203, -203, -203, -203, -68, 34, 38, -3, -202, -202,
	-106, -110, -85, -43, -44, -44, -43, -44, 46, 46,
	46, 51, 46, 51, 46, -56, -136, -203, -47, -46,
	-48, -130, -63, 54, 137, 55, -202, -138, -64, 12,
	-42, -64, -64, 117, -112, -113, 249, 246, 252, 61,
	63, 59, -179, 86, 58, 61, 32, -171, -171, -172,
	61, -172, 32, -156, 33, 72, -161, 223, 64, -158,
	-158, -159, 34, -159, -159, -159, -167, 63, -167, 64,
	64, 56, -130, -70, -142, -141, -194, 141, 147, 148,
	143, 61, 134, 32, 140, 142, 161, 139, -194, -125,
	-126, 136, 26, 134, 32, 161, -193, 57, 167, 167,
	136, -142, -118, 63, -40, 43, 117, -59, -41, 11,
	104, -131, -38, -36, 77, -70, -70, -203, -39, -146,
	113, 194, 155, 192, 188, 208, 199, 221, 190, 222,
	-143, -146, -70, -70, -70, -70, 272, -92, 85, -40,
	83, -131, -70, -70, -105, 56, -106, -80, -82, -81,
	-202, -3, -101, -130, -104, -130, -64, 59, 86, -51,
	-50, 56, 57, -52, 56, -50, 46, 46, -203, 59,
	97, 134, 134, 134, -104, -92, -40, -64, 246, 250,
	251, -178, -179, -182, -181, -130, -185, -172, -172, 58,
	-157, 56, -70, 60, -159, -159, 61, 113, 60, 59,
	60, 59, 60, 59, -59, -198, 127, -141, -141, -59,
	-141, -130, -191, 275, -192, 61, -130, -130, -59, -121,
	-64, -42, -203, -70, -203, -154, -154, -154, -163, -154,
	182, -154, 182, -203, -203, 19, 19, 19, 19, -202,
	-35, 268, -40, 59, 59, 31, -105, 59, -203, -203,
	-203, 59, 117, -203, 59, -92, -110, -40, -40, 58,
	-40, -140, -48, -49, -40, 132, 133, -202, -202, -202,
	-203, -96, 60, 59, -154, -102, -130, -165, 219, 9,
	-158, 63, -158, 64, 64, -142, 58, 30, -190, -189,
	-131, 58, -90, 13, -158, 61, -70, -70, -70, -70,
	-70, -203, 63, -70, -70, 32, -82, 38, -3, -202,
	-130, -130, -130, -96, -102, -136, -202, -202, -102, -102,
	-102, -139, -184, -183, 57, 144, 70, -181, 60, 59,
	-166, 140, 32, 139, -73, -159, -159, 60, 60, -199,
	-200, -136, -202, 59, 86, -102, -91, 14, 16, -203,
	-203, -203, -203, -34, 96, 275, -203, -203, 9, -80,
	-3, 117, 60, -43, -85, -203, -203, -203, -63, -183,
	61, -173, 86, 63, 150, -130, -155, 70, 32, 32,
	59, 60, 86, 117, -186, -187, 161, -189, -179, 60,
	-98, 166, -40, -79, -203, 273, 53, 276, -106, -203,
	-130, -203, -203, 64, -59, 63, -200, -70, -200, -203,
	59, -130, -193, -99, -100, 56, 23, 22, 43, 274,
	277, 58, 86, -187, 38, -191, 59, 20, 21, -40,
	43, -102, -70, 163, -100, -40, 275, 60, 164, 276,
	-196, -197, 56, -202, 277, -197, 56, 10, 9, -70,
	160, -195, 151, 146, 149, 34, -195, -203, -203, 145,
	33, 72,
}
var yyDef = [...]int{

	23, -2, 1, 2, -2, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 575, 0, 323, 323, 323, 323, 323,
	323, 0, 653, 636, 0, 0, 0, 0, -2, 310,
	311, 0, 313, 314, 886, 886, 886, 886, 886, 0,
	0, 886, 0, 35, 36, 884, 23, 583, 0, 0,
	327, 330, 325, 0, 636, 636, 0, 0, 65, 66,
	0, 0, 0, 869, 783, 0, 634, 634, 634, 654,
	655, 658, 659, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 0, 0, 0, 637, 0, 632, 0,
	632, 632, 632, 0, 260, 404, 662, 663, 783, 869,
	0, 0, 0, 887, 0, 887, 887, 273, 887, 887,
	276, 887, 0, 887, 0, 283, 285, 286, 287, 288,
	0, 292, 887, 307, 308, 297, 309, 312, 315, 316,
	317, 318, 319, 886, 886, 322, 29, 3, 587, 0,
	0, 575, 31, 0, 323, 328, 329, 333, 331, 332,
	324, 0, 341, 345, 0, 413, 0, 418, 420, -2,
	-2, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 560,
	561, 562, 563, 564, 565, 566, 567, 422, 423, 557,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 0, 519, 519, 519, 519, 519, 519, 519, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 46, 404, 50, 0, 860, 618, -2, -2,
	0, 0, 660, 661, -2, 773, -2, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 0, 0, 91, 0, 89, 0, 887,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 261, 887, 887, 264, 888, 889, 887, 887,
	887, 0, 887, 887, 271, 272, 274, 275, 277, 887,
	887, 279, 0, 300, 298, 299, 294, 295, 0, 289,
	290, 293, 320, 321, 30, 885, 24, 0, 0, 584,
	0, 576, 577, 580, 583, 29, 330, 0, 335, 334,
	326, 0, 342, 0, 0, 0, 346, 0, 348, 349,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 446, 419, 0,
	433, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 337, 29, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 549, 0, 503, 511,
	0, 504, 512, 505, 513, 506, 0, 507, 514, 508,
	515, 509, 510, 516, 0, 0, 0, 337, 0, 0,
	48, 0, 403, 0, 352, 354, 355, 356, -2, 0,
	662, 387, -2, 0, 0, 0, 42, 43, 0, 0,
	0, 0, 51, 860, 53, 54, 0, 0, 0, 169,
	627, 628, 629, 625, 213, 0, 0, 157, 153, 97,
	98, 99, 146, 101, 146, 146, 146, 146, 166, 166,
	166, 166, 129, 130, 131, 132, 133, 0, 0, 116,
	146, 146, 146, 120, 136, 137, 138, 139, 140, 141,
	142, 143, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 148, 148, 148, 150, 150, 656, 68, 0, 0,
	887, 0, 887, 87, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 254, 633, 0, 887, 257, 258, 405,
	664, 665, 262, 263, 265, 266, 267, 268, 269, 270,
	278, 282, 0, 303, 0, 0, 284, 0, 588, 0,
	0, 0, 0, 0, 579, 581, 582, 587, 32, 333,
	0, 568, 0, 0, 0, 336, 27, 414, 415, 417,
	434, 0, 436, 438, 347, 343, 0, 558, -2, 424,
	425, 449, 450, 451, 0, 0, 0, 0, 447, 429,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 474, 533, 534, 0, 472, 473, 482,
	0, 0, 338, 339, 452, 0, 613, 29, 0, 0,
	0, 0, 457, 560, 0, 457, 560, 0, 0, 0,
	555, 552, 0, 0, 557, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 395, 0, 0, 0,
	0, 386, 0, 0, 363, 407, 828, 388, 0, 390,
	391, 411, 0, 411, 45, 411, 47, 0, 406, 619,
	52, 0, 0, 57, 58, 620, 621, 622, 623, 0,
	88, 214, 216, 219, 220, 221, 92, 93, 94, 0,
	0, 201, 0, 0, 195, 195, 0, 193, 194, 90,
	160, 158, 0, 155, 154, 100, 0, 166, 166, 123,
	124, 169, 0, 169, 169, 169, 0, 0, 117, 118,
	119, 111, 0, 112, 113, 114, 0, 115, 0, 0,
	0, 887, 71, 635, 72, 886, 0, 0, 648, 228,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	0, 79, 230, 232, 231, 0, 0, 0, 252, 887,
	256, 300, 281, 0, 0, 301, 302, 291, 0, 585,
	586, 0, 578, 25, 0, 630, 631, 569, 570, 350,
	435, 437, 439, 0, 337, 426, 447, 430, 0, 427,
	0, 0, 421, 487, 0, 0, 454, -2, 490, 491,
	0, 0, 0, 0, 0, 526, 0, 0, 527, 0,
	575, 0, 553, 0, 0, 502, 0, 521, 0, 0,
	522, 523, 524, 525, 607, 0, 0, -2, 0, 0,
	411, 615, 0, 353, 381, 383, 0, 378, 393, 394,
	396, 0, 398, 0, 400, 401, 357, 359, 0, 364,
	365, 0, 361, 0, 0, 0, 0, 389, 575, 0,
	411, 40, 41, 0, 55, 56, 0, 0, 62, 170,
	171, 0, 217, 0, 0, 0, 188, 195, 195, 191,
	196, 192, 0, 162, 0, 159, 96, 156, 0, 169,
	169, 125, 0, 126, 127, 128, 0, 144, 0, 0,
	0, 0, 657, 77, 70, 222, 886, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 886, 0,
	886, 649, 650, 651, 652, 0, 82, 0, 0, 0,
	0, 255, 303, 304, 305, 589, 0, 26, 411, 0,
	344, 559, 0, 428, 0, 448, 431, 488, 340, 0,
	146, 146, 538, 146, 150, 541, 146, 543, 146, 546,
	0, 0, 0, 0, 0, 0, 0, 550, 501, 556,
	0, 558, 0, 0, 33, 0, 607, 597, 609, 611,
	0, 29, 0, 603, 0, 373, 575, 0, 0, 375,
	382, 0, 0, 376, 0, 377, 397, 399, 385, 0,
	0, 0, 0, 0, 0, 583, 412, 39, 59, 60,
	61, 215, 218, 0, 197, 146, 200, 189, 190, 0,
	164, 0, 161, 147, 121, 122, 167, 168, 166, 0,
	166, 0, 151, 0, 887, 69, 0, 223, 224, 225,
	226, 0, 229, 0, 80, 81, 0, 234, 253, 280,
	571, 351, 489, 432, 492, 535, 166, 539, 540, 542,
	544, 545, 547, 494, 493, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 34, 0, 612, -2,
	0, 0, 0, 49, 0, 583, 616, 617, 379, 0,
	384, 0, 366, 367, 368, 0, 0, 0, 0, 0,
	387, 38, 180, 0, 199, 0, 371, 172, 165, 0,
	169, 145, 169, 0, 0, 67, 0, 0, 83, 84,
	0, 0, 573, 0, 536, 537, 0, 0, 0, 0,
	528, 500, 551, 0, 0, 0, 610, 0, -2, 0,
	605, 604, 374, 37, 0, 360, 0, 0, 0, 0,
	0, 407, 179, 181, 0, 186, 0, 198, 0, 0,
	177, 0, 174, 176, 163, 134, 135, 149, 152, 0,
	0, 73, 0, 0, 0, 0, 590, 0, 0, 495,
	497, 496, 498, 0, 0, 0, 517, 518, 0, 600,
	29, 0, 380, 0, 0, 408, 409, 410, 362, 182,
	183, 0, 187, 185, 0, 372, 95, 0, 173, 175,
	0, 78, 0, 0, 0, 247, 0, 85, 86, 79,
	28, 0, 574, 572, 499, 0, 0, 0, 608, -2,
	606, 369, 370, 184, 0, 178, 0, 75, 74, 246,
	0, 0, 82, 591, 592, 0, 0, 0, 529, 0,
	532, 0, 0, 248, 0, 233, 0, 594, 0, 596,
	530, 0, 76, 0, 593, 595, 0, 202, 0, 0,
	203, 204, 0, 0, 531, 205, 0, 0, 0, 0,
	0, 206, 208, 209, 0, 0, 207, 249, 250, 210,
	211, 212,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 79, 3, 3, 3, 107, 99, 3,
	58, 60, 104, 102, 59, 103, 117, 105, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 279,
	87, 86, 88, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 98, 3, 110,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 80, 81, 82, 83, 84, 85,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 100,
	101, 106, 108, 111, 112, 113, 114, 115, 116, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:340
		{
			prog := yyDollar[1].pprogram
			setParseTree(yylex, &prog)
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:347
		{
			yyVAL.pprogram = Program{Command: SqlCommand{Statement: yyDollar[1].statement, Next: nil}}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:351
		{
			next := yyDollar[3].pprogram
			yyVAL.pprogram = Program{Command: SqlCommand{Statement: yyDollar[1].statement, Next: &next}}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:358
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:380
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:386
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:394
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:398
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:404
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:411
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Trigger: yyDollar[11].triggers}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:421
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:427
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:431
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:438
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:450
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:472
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:478
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:482
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:490
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:504
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:510
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:514
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
			yyVAL.partitions = nil
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:523
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:529
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:541
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:551
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:561
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:565
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:571
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:575
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:579
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.str = SessionStr
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.str = GlobalStr
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:599
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:604
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:610
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:619
		{
			yyVAL.statement = &DDL{Action: CreateDataSourceStr, Table: yyDollar[3].tableName.ToViewName(), CrateDatasourceSpecs: &CrateDatasourceSpecs{
				TypeName:     yyDollar[6].expr,
				OptionsSpecs: yyDollar[7].optionsSpecs,
			}}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:630
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:634
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.strs = []string{yyDollar[1].tableIdent.v}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.strs = append(yyDollar[3].strs, yyDollar[1].tableIdent.v)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.optionsSpecsEntry = []OptionsSpecsEntry{{
				Key:   yyDollar[1].strs,
				Value: yyDollar[3].expr,
			}}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:657
		{
			yyVAL.optionsSpecsEntry = append(yyVAL.optionsSpecsEntry, OptionsSpecsEntry{
				Key:   yyDollar[3].strs,
				Value: yyDollar[5].expr,
			})
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:666
		{
			yyVAL.optionsSpecs = OptionsSpecs{Options: map[string]interface{}{}}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:670
		{
			yyVAL.optionsSpecs = OptionsSpecs{Options: OptionsSpecsEntriesToMap(yyDollar[3].optionsSpecsEntry)}
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:675
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:679
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 87:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:718
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:725
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:732
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:736
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:761
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:772
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:983
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:993
		{
			yyVAL.sqlVal = nil
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1002
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1006
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1024
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1032
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1036
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1041
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1045
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1051
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1064
		{
			yyVAL.optVal = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1073
		{
			yyVAL.optVal = nil
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1082
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1104
		{
			yyVAL.str = ""
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1117
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.colKeyOpt = colKey
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1129
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1138
		{
			yyVAL.sqlVal = nil
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1148
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1152
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1158
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1183
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1215
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1219
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.str = ""
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 202:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1261
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 203:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1265
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 204:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1269
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 205:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1273
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1312
		{
			yyVAL.str = ""
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = yyDollar[1].str
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1342
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1356
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 223:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1360
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1364
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 225:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1368
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 226:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1373
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1378
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1382
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 229:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1386
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[5].colIdent,
				Type:   yyDollar[6].colIdent,
				Params: yyDollar[7].vindexParams,
			}}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1394
		{
			yyVAL.statement = &DDL{Action: DropVindexStr, VindexSpec: &VindexSpec{
				Name: yyDollar[5].colIdent,
			}}
		}
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1400
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1404
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 233:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1408
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1421
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 246:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1446
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1456
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 249:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1462
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 250:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1466
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1490
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1498
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1503
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1511
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1536
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1541
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1554
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1558
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1562
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1566
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1570
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1598
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1602
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1610
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1615
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1625
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1629
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1633
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1643
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1655
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1659
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1663
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = ""
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = "full "
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1727
		{
			yyVAL.showFilter = nil
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = ""
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = SessionStr
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = GlobalStr
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Begin{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Begin{}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.statement = &Commit{}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.statement = &Rollback{}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.statement = &OtherRead{}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.statement = &OtherRead{}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &OtherRead{}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1811
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1821
		{
			setAllowComments(yylex, true)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1831
		{
			yyVAL.bytes2 = nil
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = UnionStr
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = UnionAllStr
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = UnionDistinctStr
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = SQLCacheStr
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = DistinctStr
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = StraightJoinHint
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1885
		{
			yyVAL.selectExprs = nil
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1922
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1942
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1984
		{
			yyVAL.tableExpr = &TableValuedFunction{Name: NewColIdent(string(yyDollar[1].bytes)), Args: yyDollar[3].tableValuedFunctionArguments, As: yyDollar[6].tableIdent}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1994
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1999
		{
			yyVAL.tableValuedFunctionArguments = nil
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.tableValuedFunctionArguments = yyDollar[1].tableValuedFunctionArguments
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.tableValuedFunctionArguments = TableValuedFunctionArguments{yyDollar[1].tableValuedFunctionArgument}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.tableValuedFunctionArguments = append(yyVAL.tableValuedFunctionArguments, yyDollar[3].tableValuedFunctionArgument)
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.tableValuedFunctionArgument = &TableValuedFunctionArgument{Name: yyDollar[1].colIdent, Value: yyDollar[3].tableValuedFunctionArgumentValue}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.tableValuedFunctionArgumentValue = &ExprTableValuedFunctionArgumentValue{Expr: yyDollar[1].expr}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2029
		{
			yyVAL.tableValuedFunctionArgumentValue = &TableDescriptorTableValuedFunctionArgumentValue{Table: yyDollar[3].tableExpr}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2033
		{
			yyVAL.tableValuedFunctionArgumentValue = &FieldDescriptorTableValuedFunctionArgumentValue{Field: yyDollar[3].colName}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2053
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2066
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2070
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2074
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2086
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2101
		{
			yyVAL.empty = struct{}{}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.empty = struct{}{}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = JoinStr
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = JoinStr
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = JoinStr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = StraightJoinStr
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = LeftJoinStr
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = LeftJoinStr
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = RightJoinStr
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = RightJoinStr
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = NaturalJoinStr
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2199
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2204
		{
			yyVAL.indexHints = nil
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2208
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2212
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2216
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2221
		{
			yyVAL.expr = nil
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2225
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2243
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2255
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2289
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2293
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2297
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2305
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2309
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2313
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = IsNullStr
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = IsNotNullStr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.str = IsTrueStr
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = IsNotTrueStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = IsFalseStr
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = IsNotFalseStr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = EqualStr
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = LessThanStr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = GreaterThanStr
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = LessEqualStr
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = GreaterEqualStr
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.str = NotEqualStr
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2378
		{
			yyVAL.expr = nil
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2412
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2438
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2494
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2558
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2562
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 489:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2566
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2584
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2588
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2592
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 495:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2596
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 496:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2600
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2604
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 498:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2608
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 499:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2612
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 500:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2616
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2620
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2624
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2691
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2700
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2704
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = ""
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = BooleanModeStr
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = QueryExpansionStr
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2782
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2812
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2820
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2824
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = nil
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = string("")
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2866
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.expr = nil
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &NullVal{}
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2942
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2947
		{
			yyVAL.exprs = nil
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2956
		{
			yyVAL.expr = nil
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2965
		{
			yyVAL.orderBy = nil
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2969
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = AscScr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = AscScr
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = DescScr
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3003
		{
			yyVAL.limit = nil
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3007
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3011
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3015
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = ForUpdateStr
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = ShareModeStr
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3033
		{
			yyVAL.triggers = nil
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3037
		{
			yyVAL.triggers = yyDollar[2].triggers
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.triggers = []Trigger{yyDollar[1].trigger}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.triggers = append(yyDollar[1].triggers, yyDollar[3].trigger)
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3053
		{
			yyVAL.trigger = &WatermarkTrigger{}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.trigger = &DelayTrigger{Delay: yyDollar[3].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.trigger = &CountingTrigger{Count: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3087
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3091
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3095
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3114
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.updateExprs = nil
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3123
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3169
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3195
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3210
		{
			yyVAL.bytes = []byte("charset")
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.expr = &Default{}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3234
		{
			yyVAL.byt = 0
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3236
		{
			yyVAL.byt = 1
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3239
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3244
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.str = IgnoreStr
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3252
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3260
		{
			yyVAL.empty = struct{}{}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.empty = struct{}{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.empty = struct{}{}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3271
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3275
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3281
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3284
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.empty = struct{}{}
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3291
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3293
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3569
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			decNesting(yylex)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3583
		{
			skipToEnd(yylex)
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3588
		{
			skipToEnd(yylex)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			skipToEnd(yylex)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
